// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "InnerPostMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WebGame {
namespace Server {
namespace Stock {

namespace {

const ::google::protobuf::Descriptor* InnerPostMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InnerPostMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* InnerPostMessage_SpecialGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InnerPostMessage_SpecialGroup_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InnerPostMessage_traits_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_InnerPostMessage_2eproto() {
  protobuf_AddDesc_InnerPostMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "InnerPostMessage.proto");
  GOOGLE_CHECK(file != NULL);
  InnerPostMessage_descriptor_ = file->message_type(0);
  static const int InnerPostMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage, omitted_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage, no_delay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage, information_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage, group_),
  };
  InnerPostMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InnerPostMessage_descriptor_,
      InnerPostMessage::default_instance_,
      InnerPostMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InnerPostMessage));
  InnerPostMessage_SpecialGroup_descriptor_ = InnerPostMessage_descriptor_->nested_type(0);
  static const int InnerPostMessage_SpecialGroup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage_SpecialGroup, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage_SpecialGroup, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage_SpecialGroup, property_),
  };
  InnerPostMessage_SpecialGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InnerPostMessage_SpecialGroup_descriptor_,
      InnerPostMessage_SpecialGroup::default_instance_,
      InnerPostMessage_SpecialGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage_SpecialGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerPostMessage_SpecialGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InnerPostMessage_SpecialGroup));
  InnerPostMessage_traits_descriptor_ = InnerPostMessage_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_InnerPostMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InnerPostMessage_descriptor_, &InnerPostMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InnerPostMessage_SpecialGroup_descriptor_, &InnerPostMessage_SpecialGroup::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_InnerPostMessage_2eproto() {
  delete InnerPostMessage::default_instance_;
  delete InnerPostMessage_reflection_;
  delete InnerPostMessage_SpecialGroup::default_instance_;
  delete InnerPostMessage_SpecialGroup_reflection_;
}

void protobuf_AddDesc_InnerPostMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026InnerPostMessage.proto\022\024WebGame.Server"
    ".Stock\"\342\001\n\020InnerPostMessage\022\022\n\nomitted_i"
    "d\030\001 \003(\005\022\020\n\010no_delay\030\002 \001(\010\022\023\n\013information"
    "\030\003 \002(\014\022B\n\005group\030\004 \001(\01323.WebGame.Server.S"
    "tock.InnerPostMessage.SpecialGroup\032:\n\014Sp"
    "ecialGroup\022\014\n\004type\030\001 \002(\005\022\n\n\002id\030\002 \002(\005\022\020\n\010"
    "property\030\003 \001(\005\"\023\n\006traits\022\t\n\005value\020\003", 275);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "InnerPostMessage.proto", &protobuf_RegisterTypes);
  InnerPostMessage::default_instance_ = new InnerPostMessage();
  InnerPostMessage_SpecialGroup::default_instance_ = new InnerPostMessage_SpecialGroup();
  InnerPostMessage::default_instance_->InitAsDefaultInstance();
  InnerPostMessage_SpecialGroup::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_InnerPostMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_InnerPostMessage_2eproto {
  StaticDescriptorInitializer_InnerPostMessage_2eproto() {
    protobuf_AddDesc_InnerPostMessage_2eproto();
  }
} static_descriptor_initializer_InnerPostMessage_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* InnerPostMessage_traits_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InnerPostMessage_traits_descriptor_;
}
bool InnerPostMessage_traits_IsValid(int value) {
  switch(value) {
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const InnerPostMessage_traits InnerPostMessage::value;
const InnerPostMessage_traits InnerPostMessage::traits_MIN;
const InnerPostMessage_traits InnerPostMessage::traits_MAX;
const int InnerPostMessage::traits_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int InnerPostMessage_SpecialGroup::kTypeFieldNumber;
const int InnerPostMessage_SpecialGroup::kIdFieldNumber;
const int InnerPostMessage_SpecialGroup::kPropertyFieldNumber;
#endif  // !_MSC_VER

InnerPostMessage_SpecialGroup::InnerPostMessage_SpecialGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InnerPostMessage_SpecialGroup::InitAsDefaultInstance() {
}

InnerPostMessage_SpecialGroup::InnerPostMessage_SpecialGroup(const InnerPostMessage_SpecialGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InnerPostMessage_SpecialGroup::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  id_ = 0;
  property_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InnerPostMessage_SpecialGroup::~InnerPostMessage_SpecialGroup() {
  SharedDtor();
}

void InnerPostMessage_SpecialGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InnerPostMessage_SpecialGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InnerPostMessage_SpecialGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InnerPostMessage_SpecialGroup_descriptor_;
}

const InnerPostMessage_SpecialGroup& InnerPostMessage_SpecialGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_InnerPostMessage_2eproto();  return *default_instance_;
}

InnerPostMessage_SpecialGroup* InnerPostMessage_SpecialGroup::default_instance_ = NULL;

InnerPostMessage_SpecialGroup* InnerPostMessage_SpecialGroup::New() const {
  return new InnerPostMessage_SpecialGroup;
}

void InnerPostMessage_SpecialGroup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    id_ = 0;
    property_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InnerPostMessage_SpecialGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }
      
      // required int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_property;
        break;
      }
      
      // optional int32 property = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_property:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_)));
          set_has_property();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InnerPostMessage_SpecialGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // required int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }
  
  // optional int32 property = 3;
  if (has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->property(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InnerPostMessage_SpecialGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // required int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }
  
  // optional int32 property = 3;
  if (has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->property(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InnerPostMessage_SpecialGroup::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // required int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 property = 3;
    if (has_property()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->property());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InnerPostMessage_SpecialGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InnerPostMessage_SpecialGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InnerPostMessage_SpecialGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InnerPostMessage_SpecialGroup::MergeFrom(const InnerPostMessage_SpecialGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_property()) {
      set_property(from.property());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InnerPostMessage_SpecialGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerPostMessage_SpecialGroup::CopyFrom(const InnerPostMessage_SpecialGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerPostMessage_SpecialGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void InnerPostMessage_SpecialGroup::Swap(InnerPostMessage_SpecialGroup* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    std::swap(property_, other->property_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InnerPostMessage_SpecialGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InnerPostMessage_SpecialGroup_descriptor_;
  metadata.reflection = InnerPostMessage_SpecialGroup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int InnerPostMessage::kOmittedIdFieldNumber;
const int InnerPostMessage::kNoDelayFieldNumber;
const int InnerPostMessage::kInformationFieldNumber;
const int InnerPostMessage::kGroupFieldNumber;
#endif  // !_MSC_VER

InnerPostMessage::InnerPostMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InnerPostMessage::InitAsDefaultInstance() {
  group_ = const_cast< ::WebGame::Server::Stock::InnerPostMessage_SpecialGroup*>(&::WebGame::Server::Stock::InnerPostMessage_SpecialGroup::default_instance());
}

InnerPostMessage::InnerPostMessage(const InnerPostMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InnerPostMessage::SharedCtor() {
  _cached_size_ = 0;
  no_delay_ = false;
  information_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  group_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InnerPostMessage::~InnerPostMessage() {
  SharedDtor();
}

void InnerPostMessage::SharedDtor() {
  if (information_ != &::google::protobuf::internal::kEmptyString) {
    delete information_;
  }
  if (this != default_instance_) {
    delete group_;
  }
}

void InnerPostMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InnerPostMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InnerPostMessage_descriptor_;
}

const InnerPostMessage& InnerPostMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_InnerPostMessage_2eproto();  return *default_instance_;
}

InnerPostMessage* InnerPostMessage::default_instance_ = NULL;

InnerPostMessage* InnerPostMessage::New() const {
  return new InnerPostMessage;
}

void InnerPostMessage::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    no_delay_ = false;
    if (has_information()) {
      if (information_ != &::google::protobuf::internal::kEmptyString) {
        information_->clear();
      }
    }
    if (has_group()) {
      if (group_ != NULL) group_->::WebGame::Server::Stock::InnerPostMessage_SpecialGroup::Clear();
    }
  }
  omitted_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InnerPostMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 omitted_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_omitted_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_omitted_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_omitted_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_omitted_id;
        if (input->ExpectTag(16)) goto parse_no_delay;
        break;
      }
      
      // optional bool no_delay = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_delay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_delay_)));
          set_has_no_delay();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_information;
        break;
      }
      
      // required bytes information = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_information:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_information()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_group;
        break;
      }
      
      // optional .WebGame.Server.Stock.InnerPostMessage.SpecialGroup group = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InnerPostMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 omitted_id = 1;
  for (int i = 0; i < this->omitted_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->omitted_id(i), output);
  }
  
  // optional bool no_delay = 2;
  if (has_no_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->no_delay(), output);
  }
  
  // required bytes information = 3;
  if (has_information()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->information(), output);
  }
  
  // optional .WebGame.Server.Stock.InnerPostMessage.SpecialGroup group = 4;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->group(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InnerPostMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 omitted_id = 1;
  for (int i = 0; i < this->omitted_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->omitted_id(i), target);
  }
  
  // optional bool no_delay = 2;
  if (has_no_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->no_delay(), target);
  }
  
  // required bytes information = 3;
  if (has_information()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->information(), target);
  }
  
  // optional .WebGame.Server.Stock.InnerPostMessage.SpecialGroup group = 4;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->group(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InnerPostMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional bool no_delay = 2;
    if (has_no_delay()) {
      total_size += 1 + 1;
    }
    
    // required bytes information = 3;
    if (has_information()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->information());
    }
    
    // optional .WebGame.Server.Stock.InnerPostMessage.SpecialGroup group = 4;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group());
    }
    
  }
  // repeated int32 omitted_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->omitted_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->omitted_id(i));
    }
    total_size += 1 * this->omitted_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InnerPostMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InnerPostMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InnerPostMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InnerPostMessage::MergeFrom(const InnerPostMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  omitted_id_.MergeFrom(from.omitted_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_no_delay()) {
      set_no_delay(from.no_delay());
    }
    if (from.has_information()) {
      set_information(from.information());
    }
    if (from.has_group()) {
      mutable_group()->::WebGame::Server::Stock::InnerPostMessage_SpecialGroup::MergeFrom(from.group());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InnerPostMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerPostMessage::CopyFrom(const InnerPostMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerPostMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  
  if (has_group()) {
    if (!this->group().IsInitialized()) return false;
  }
  return true;
}

void InnerPostMessage::Swap(InnerPostMessage* other) {
  if (other != this) {
    omitted_id_.Swap(&other->omitted_id_);
    std::swap(no_delay_, other->no_delay_);
    std::swap(information_, other->information_);
    std::swap(group_, other->group_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InnerPostMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InnerPostMessage_descriptor_;
  metadata.reflection = InnerPostMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Stock
}  // namespace Server
}  // namespace WebGame

// @@protoc_insertion_point(global_scope)
