// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerCache_SummonBossTimes.proto

#ifndef PROTOBUF_ServerCache_5fSummonBossTimes_2eproto__INCLUDED
#define PROTOBUF_ServerCache_5fSummonBossTimes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ServerCache_5fSummonBossTimes_2eproto();
void protobuf_AssignDesc_ServerCache_5fSummonBossTimes_2eproto();
void protobuf_ShutdownFile_ServerCache_5fSummonBossTimes_2eproto();

class ServerCache_SummonBossTimes;
class ServerCache_SummonBossTimes_BossPair;
class ServerCache_SummonBossTimes_Player;

enum ServerCache_SummonBossTimes_traits {
  ServerCache_SummonBossTimes_traits_value = 4333
};
bool ServerCache_SummonBossTimes_traits_IsValid(int value);
const ServerCache_SummonBossTimes_traits ServerCache_SummonBossTimes_traits_traits_MIN = ServerCache_SummonBossTimes_traits_value;
const ServerCache_SummonBossTimes_traits ServerCache_SummonBossTimes_traits_traits_MAX = ServerCache_SummonBossTimes_traits_value;
const int ServerCache_SummonBossTimes_traits_traits_ARRAYSIZE = ServerCache_SummonBossTimes_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerCache_SummonBossTimes_traits_descriptor();
inline const ::std::string& ServerCache_SummonBossTimes_traits_Name(ServerCache_SummonBossTimes_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerCache_SummonBossTimes_traits_descriptor(), value);
}
inline bool ServerCache_SummonBossTimes_traits_Parse(
    const ::std::string& name, ServerCache_SummonBossTimes_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerCache_SummonBossTimes_traits>(
    ServerCache_SummonBossTimes_traits_descriptor(), name, value);
}
// ===================================================================

class ServerCache_SummonBossTimes_BossPair : public ::google::protobuf::Message {
 public:
  ServerCache_SummonBossTimes_BossPair();
  virtual ~ServerCache_SummonBossTimes_BossPair();
  
  ServerCache_SummonBossTimes_BossPair(const ServerCache_SummonBossTimes_BossPair& from);
  
  inline ServerCache_SummonBossTimes_BossPair& operator=(const ServerCache_SummonBossTimes_BossPair& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCache_SummonBossTimes_BossPair& default_instance();
  
  void Swap(ServerCache_SummonBossTimes_BossPair* other);
  
  // implements Message ----------------------------------------------
  
  ServerCache_SummonBossTimes_BossPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCache_SummonBossTimes_BossPair& from);
  void MergeFrom(const ServerCache_SummonBossTimes_BossPair& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 boss_id = 1;
  inline bool has_boss_id() const;
  inline void clear_boss_id();
  static const int kBossIdFieldNumber = 1;
  inline ::google::protobuf::int32 boss_id() const;
  inline void set_boss_id(::google::protobuf::int32 value);
  
  // required int32 boss_time = 2;
  inline bool has_boss_time() const;
  inline void clear_boss_time();
  static const int kBossTimeFieldNumber = 2;
  inline ::google::protobuf::int32 boss_time() const;
  inline void set_boss_time(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.ServerCache_SummonBossTimes.BossPair)
 private:
  inline void set_has_boss_id();
  inline void clear_has_boss_id();
  inline void set_has_boss_time();
  inline void clear_has_boss_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 boss_id_;
  ::google::protobuf::int32 boss_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ServerCache_5fSummonBossTimes_2eproto();
  friend void protobuf_AssignDesc_ServerCache_5fSummonBossTimes_2eproto();
  friend void protobuf_ShutdownFile_ServerCache_5fSummonBossTimes_2eproto();
  
  void InitAsDefaultInstance();
  static ServerCache_SummonBossTimes_BossPair* default_instance_;
};
// -------------------------------------------------------------------

class ServerCache_SummonBossTimes_Player : public ::google::protobuf::Message {
 public:
  ServerCache_SummonBossTimes_Player();
  virtual ~ServerCache_SummonBossTimes_Player();
  
  ServerCache_SummonBossTimes_Player(const ServerCache_SummonBossTimes_Player& from);
  
  inline ServerCache_SummonBossTimes_Player& operator=(const ServerCache_SummonBossTimes_Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCache_SummonBossTimes_Player& default_instance();
  
  void Swap(ServerCache_SummonBossTimes_Player* other);
  
  // implements Message ----------------------------------------------
  
  ServerCache_SummonBossTimes_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCache_SummonBossTimes_Player& from);
  void MergeFrom(const ServerCache_SummonBossTimes_Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 current_time = 2;
  inline bool has_current_time() const;
  inline void clear_current_time();
  static const int kCurrentTimeFieldNumber = 2;
  inline ::google::protobuf::int32 current_time() const;
  inline void set_current_time(::google::protobuf::int32 value);
  
  // repeated .game_connection.ServerCache_SummonBossTimes.BossPair boss_info = 3;
  inline int boss_info_size() const;
  inline void clear_boss_info();
  static const int kBossInfoFieldNumber = 3;
  inline const ::game_connection::ServerCache_SummonBossTimes_BossPair& boss_info(int index) const;
  inline ::game_connection::ServerCache_SummonBossTimes_BossPair* mutable_boss_info(int index);
  inline ::game_connection::ServerCache_SummonBossTimes_BossPair* add_boss_info();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_BossPair >&
      boss_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_BossPair >*
      mutable_boss_info();
  
  // @@protoc_insertion_point(class_scope:game_connection.ServerCache_SummonBossTimes.Player)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_current_time();
  inline void clear_has_current_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 current_time_;
  ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_BossPair > boss_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ServerCache_5fSummonBossTimes_2eproto();
  friend void protobuf_AssignDesc_ServerCache_5fSummonBossTimes_2eproto();
  friend void protobuf_ShutdownFile_ServerCache_5fSummonBossTimes_2eproto();
  
  void InitAsDefaultInstance();
  static ServerCache_SummonBossTimes_Player* default_instance_;
};
// -------------------------------------------------------------------

class ServerCache_SummonBossTimes : public ::google::protobuf::Message {
 public:
  ServerCache_SummonBossTimes();
  virtual ~ServerCache_SummonBossTimes();
  
  ServerCache_SummonBossTimes(const ServerCache_SummonBossTimes& from);
  
  inline ServerCache_SummonBossTimes& operator=(const ServerCache_SummonBossTimes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCache_SummonBossTimes& default_instance();
  
  void Swap(ServerCache_SummonBossTimes* other);
  
  // implements Message ----------------------------------------------
  
  ServerCache_SummonBossTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCache_SummonBossTimes& from);
  void MergeFrom(const ServerCache_SummonBossTimes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ServerCache_SummonBossTimes_BossPair BossPair;
  typedef ServerCache_SummonBossTimes_Player Player;
  
  typedef ServerCache_SummonBossTimes_traits traits;
  static const traits value = ServerCache_SummonBossTimes_traits_value;
  static inline bool traits_IsValid(int value) {
    return ServerCache_SummonBossTimes_traits_IsValid(value);
  }
  static const traits traits_MIN =
    ServerCache_SummonBossTimes_traits_traits_MIN;
  static const traits traits_MAX =
    ServerCache_SummonBossTimes_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    ServerCache_SummonBossTimes_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return ServerCache_SummonBossTimes_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return ServerCache_SummonBossTimes_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return ServerCache_SummonBossTimes_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .game_connection.ServerCache_SummonBossTimes.Player player = 1;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 1;
  inline const ::game_connection::ServerCache_SummonBossTimes_Player& player(int index) const;
  inline ::game_connection::ServerCache_SummonBossTimes_Player* mutable_player(int index);
  inline ::game_connection::ServerCache_SummonBossTimes_Player* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_Player >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_Player >*
      mutable_player();
  
  // @@protoc_insertion_point(class_scope:game_connection.ServerCache_SummonBossTimes)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_Player > player_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ServerCache_5fSummonBossTimes_2eproto();
  friend void protobuf_AssignDesc_ServerCache_5fSummonBossTimes_2eproto();
  friend void protobuf_ShutdownFile_ServerCache_5fSummonBossTimes_2eproto();
  
  void InitAsDefaultInstance();
  static ServerCache_SummonBossTimes* default_instance_;
};
// ===================================================================


// ===================================================================

// ServerCache_SummonBossTimes_BossPair

// required int32 boss_id = 1;
inline bool ServerCache_SummonBossTimes_BossPair::has_boss_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerCache_SummonBossTimes_BossPair::set_has_boss_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerCache_SummonBossTimes_BossPair::clear_has_boss_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerCache_SummonBossTimes_BossPair::clear_boss_id() {
  boss_id_ = 0;
  clear_has_boss_id();
}
inline ::google::protobuf::int32 ServerCache_SummonBossTimes_BossPair::boss_id() const {
  return boss_id_;
}
inline void ServerCache_SummonBossTimes_BossPair::set_boss_id(::google::protobuf::int32 value) {
  set_has_boss_id();
  boss_id_ = value;
}

// required int32 boss_time = 2;
inline bool ServerCache_SummonBossTimes_BossPair::has_boss_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerCache_SummonBossTimes_BossPair::set_has_boss_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerCache_SummonBossTimes_BossPair::clear_has_boss_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerCache_SummonBossTimes_BossPair::clear_boss_time() {
  boss_time_ = 0;
  clear_has_boss_time();
}
inline ::google::protobuf::int32 ServerCache_SummonBossTimes_BossPair::boss_time() const {
  return boss_time_;
}
inline void ServerCache_SummonBossTimes_BossPair::set_boss_time(::google::protobuf::int32 value) {
  set_has_boss_time();
  boss_time_ = value;
}

// -------------------------------------------------------------------

// ServerCache_SummonBossTimes_Player

// required int32 id = 1;
inline bool ServerCache_SummonBossTimes_Player::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerCache_SummonBossTimes_Player::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerCache_SummonBossTimes_Player::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerCache_SummonBossTimes_Player::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ServerCache_SummonBossTimes_Player::id() const {
  return id_;
}
inline void ServerCache_SummonBossTimes_Player::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 current_time = 2;
inline bool ServerCache_SummonBossTimes_Player::has_current_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerCache_SummonBossTimes_Player::set_has_current_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerCache_SummonBossTimes_Player::clear_has_current_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerCache_SummonBossTimes_Player::clear_current_time() {
  current_time_ = 0;
  clear_has_current_time();
}
inline ::google::protobuf::int32 ServerCache_SummonBossTimes_Player::current_time() const {
  return current_time_;
}
inline void ServerCache_SummonBossTimes_Player::set_current_time(::google::protobuf::int32 value) {
  set_has_current_time();
  current_time_ = value;
}

// repeated .game_connection.ServerCache_SummonBossTimes.BossPair boss_info = 3;
inline int ServerCache_SummonBossTimes_Player::boss_info_size() const {
  return boss_info_.size();
}
inline void ServerCache_SummonBossTimes_Player::clear_boss_info() {
  boss_info_.Clear();
}
inline const ::game_connection::ServerCache_SummonBossTimes_BossPair& ServerCache_SummonBossTimes_Player::boss_info(int index) const {
  return boss_info_.Get(index);
}
inline ::game_connection::ServerCache_SummonBossTimes_BossPair* ServerCache_SummonBossTimes_Player::mutable_boss_info(int index) {
  return boss_info_.Mutable(index);
}
inline ::game_connection::ServerCache_SummonBossTimes_BossPair* ServerCache_SummonBossTimes_Player::add_boss_info() {
  return boss_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_BossPair >&
ServerCache_SummonBossTimes_Player::boss_info() const {
  return boss_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_BossPair >*
ServerCache_SummonBossTimes_Player::mutable_boss_info() {
  return &boss_info_;
}

// -------------------------------------------------------------------

// ServerCache_SummonBossTimes

// repeated .game_connection.ServerCache_SummonBossTimes.Player player = 1;
inline int ServerCache_SummonBossTimes::player_size() const {
  return player_.size();
}
inline void ServerCache_SummonBossTimes::clear_player() {
  player_.Clear();
}
inline const ::game_connection::ServerCache_SummonBossTimes_Player& ServerCache_SummonBossTimes::player(int index) const {
  return player_.Get(index);
}
inline ::game_connection::ServerCache_SummonBossTimes_Player* ServerCache_SummonBossTimes::mutable_player(int index) {
  return player_.Mutable(index);
}
inline ::game_connection::ServerCache_SummonBossTimes_Player* ServerCache_SummonBossTimes::add_player() {
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_Player >&
ServerCache_SummonBossTimes::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_SummonBossTimes_Player >*
ServerCache_SummonBossTimes::mutable_player() {
  return &player_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::ServerCache_SummonBossTimes_traits>() {
  return ::game_connection::ServerCache_SummonBossTimes_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerCache_5fSummonBossTimes_2eproto__INCLUDED
