// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerOnlineAwardTimeInteval.proto

#ifndef PROTOBUF_PlayerOnlineAwardTimeInteval_2eproto__INCLUDED
#define PROTOBUF_PlayerOnlineAwardTimeInteval_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PlayerOnlineAwardTimeInteval_2eproto();
void protobuf_AssignDesc_PlayerOnlineAwardTimeInteval_2eproto();
void protobuf_ShutdownFile_PlayerOnlineAwardTimeInteval_2eproto();

class PlayerOnlineAwardTimeInteval;

enum PlayerOnlineAwardTimeInteval_traits {
  PlayerOnlineAwardTimeInteval_traits_value = 3242
};
bool PlayerOnlineAwardTimeInteval_traits_IsValid(int value);
const PlayerOnlineAwardTimeInteval_traits PlayerOnlineAwardTimeInteval_traits_traits_MIN = PlayerOnlineAwardTimeInteval_traits_value;
const PlayerOnlineAwardTimeInteval_traits PlayerOnlineAwardTimeInteval_traits_traits_MAX = PlayerOnlineAwardTimeInteval_traits_value;
const int PlayerOnlineAwardTimeInteval_traits_traits_ARRAYSIZE = PlayerOnlineAwardTimeInteval_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerOnlineAwardTimeInteval_traits_descriptor();
inline const ::std::string& PlayerOnlineAwardTimeInteval_traits_Name(PlayerOnlineAwardTimeInteval_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerOnlineAwardTimeInteval_traits_descriptor(), value);
}
inline bool PlayerOnlineAwardTimeInteval_traits_Parse(
    const ::std::string& name, PlayerOnlineAwardTimeInteval_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerOnlineAwardTimeInteval_traits>(
    PlayerOnlineAwardTimeInteval_traits_descriptor(), name, value);
}
// ===================================================================

class PlayerOnlineAwardTimeInteval : public ::google::protobuf::Message {
 public:
  PlayerOnlineAwardTimeInteval();
  virtual ~PlayerOnlineAwardTimeInteval();
  
  PlayerOnlineAwardTimeInteval(const PlayerOnlineAwardTimeInteval& from);
  
  inline PlayerOnlineAwardTimeInteval& operator=(const PlayerOnlineAwardTimeInteval& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerOnlineAwardTimeInteval& default_instance();
  
  void Swap(PlayerOnlineAwardTimeInteval* other);
  
  // implements Message ----------------------------------------------
  
  PlayerOnlineAwardTimeInteval* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerOnlineAwardTimeInteval& from);
  void MergeFrom(const PlayerOnlineAwardTimeInteval& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PlayerOnlineAwardTimeInteval_traits traits;
  static const traits value = PlayerOnlineAwardTimeInteval_traits_value;
  static inline bool traits_IsValid(int value) {
    return PlayerOnlineAwardTimeInteval_traits_IsValid(value);
  }
  static const traits traits_MIN =
    PlayerOnlineAwardTimeInteval_traits_traits_MIN;
  static const traits traits_MAX =
    PlayerOnlineAwardTimeInteval_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    PlayerOnlineAwardTimeInteval_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return PlayerOnlineAwardTimeInteval_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return PlayerOnlineAwardTimeInteval_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return PlayerOnlineAwardTimeInteval_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 inteval = 1;
  inline int inteval_size() const;
  inline void clear_inteval();
  static const int kIntevalFieldNumber = 1;
  inline ::google::protobuf::uint32 inteval(int index) const;
  inline void set_inteval(int index, ::google::protobuf::uint32 value);
  inline void add_inteval(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      inteval() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_inteval();
  
  // required int32 next_reward_level = 2;
  inline bool has_next_reward_level() const;
  inline void clear_next_reward_level();
  static const int kNextRewardLevelFieldNumber = 2;
  inline ::google::protobuf::int32 next_reward_level() const;
  inline void set_next_reward_level(::google::protobuf::int32 value);
  
  // required int32 passed_time = 3;
  inline bool has_passed_time() const;
  inline void clear_passed_time();
  static const int kPassedTimeFieldNumber = 3;
  inline ::google::protobuf::int32 passed_time() const;
  inline void set_passed_time(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.PlayerOnlineAwardTimeInteval)
 private:
  inline void set_has_next_reward_level();
  inline void clear_has_next_reward_level();
  inline void set_has_passed_time();
  inline void clear_has_passed_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inteval_;
  ::google::protobuf::int32 next_reward_level_;
  ::google::protobuf::int32 passed_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerOnlineAwardTimeInteval_2eproto();
  friend void protobuf_AssignDesc_PlayerOnlineAwardTimeInteval_2eproto();
  friend void protobuf_ShutdownFile_PlayerOnlineAwardTimeInteval_2eproto();
  
  void InitAsDefaultInstance();
  static PlayerOnlineAwardTimeInteval* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerOnlineAwardTimeInteval

// repeated uint32 inteval = 1;
inline int PlayerOnlineAwardTimeInteval::inteval_size() const {
  return inteval_.size();
}
inline void PlayerOnlineAwardTimeInteval::clear_inteval() {
  inteval_.Clear();
}
inline ::google::protobuf::uint32 PlayerOnlineAwardTimeInteval::inteval(int index) const {
  return inteval_.Get(index);
}
inline void PlayerOnlineAwardTimeInteval::set_inteval(int index, ::google::protobuf::uint32 value) {
  inteval_.Set(index, value);
}
inline void PlayerOnlineAwardTimeInteval::add_inteval(::google::protobuf::uint32 value) {
  inteval_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerOnlineAwardTimeInteval::inteval() const {
  return inteval_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerOnlineAwardTimeInteval::mutable_inteval() {
  return &inteval_;
}

// required int32 next_reward_level = 2;
inline bool PlayerOnlineAwardTimeInteval::has_next_reward_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerOnlineAwardTimeInteval::set_has_next_reward_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerOnlineAwardTimeInteval::clear_has_next_reward_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerOnlineAwardTimeInteval::clear_next_reward_level() {
  next_reward_level_ = 0;
  clear_has_next_reward_level();
}
inline ::google::protobuf::int32 PlayerOnlineAwardTimeInteval::next_reward_level() const {
  return next_reward_level_;
}
inline void PlayerOnlineAwardTimeInteval::set_next_reward_level(::google::protobuf::int32 value) {
  set_has_next_reward_level();
  next_reward_level_ = value;
}

// required int32 passed_time = 3;
inline bool PlayerOnlineAwardTimeInteval::has_passed_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerOnlineAwardTimeInteval::set_has_passed_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerOnlineAwardTimeInteval::clear_has_passed_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerOnlineAwardTimeInteval::clear_passed_time() {
  passed_time_ = 0;
  clear_has_passed_time();
}
inline ::google::protobuf::int32 PlayerOnlineAwardTimeInteval::passed_time() const {
  return passed_time_;
}
inline void PlayerOnlineAwardTimeInteval::set_passed_time(::google::protobuf::int32 value) {
  set_has_passed_time();
  passed_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::PlayerOnlineAwardTimeInteval_traits>() {
  return ::game_connection::PlayerOnlineAwardTimeInteval_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerOnlineAwardTimeInteval_2eproto__INCLUDED
