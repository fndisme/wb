// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnityQuickDailyBossResult.proto

#ifndef PROTOBUF_UnityQuickDailyBossResult_2eproto__INCLUDED
#define PROTOBUF_UnityQuickDailyBossResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UnityQuickDailyBossResult_2eproto();
void protobuf_AssignDesc_UnityQuickDailyBossResult_2eproto();
void protobuf_ShutdownFile_UnityQuickDailyBossResult_2eproto();

class UnityQuickDailyBossResult;
class UnityQuickDailyBossResult_AdjuntantState;

enum UnityQuickDailyBossResult_traits {
  UnityQuickDailyBossResult_traits_value = 3322
};
bool UnityQuickDailyBossResult_traits_IsValid(int value);
const UnityQuickDailyBossResult_traits UnityQuickDailyBossResult_traits_traits_MIN = UnityQuickDailyBossResult_traits_value;
const UnityQuickDailyBossResult_traits UnityQuickDailyBossResult_traits_traits_MAX = UnityQuickDailyBossResult_traits_value;
const int UnityQuickDailyBossResult_traits_traits_ARRAYSIZE = UnityQuickDailyBossResult_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnityQuickDailyBossResult_traits_descriptor();
inline const ::std::string& UnityQuickDailyBossResult_traits_Name(UnityQuickDailyBossResult_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnityQuickDailyBossResult_traits_descriptor(), value);
}
inline bool UnityQuickDailyBossResult_traits_Parse(
    const ::std::string& name, UnityQuickDailyBossResult_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnityQuickDailyBossResult_traits>(
    UnityQuickDailyBossResult_traits_descriptor(), name, value);
}
enum UnityQuickDailyBossResult_Grade {
  UnityQuickDailyBossResult_Grade_OneStar = 1,
  UnityQuickDailyBossResult_Grade_TwoStar = 2,
  UnityQuickDailyBossResult_Grade_ThreeStar = 3,
  UnityQuickDailyBossResult_Grade_FourStar = 4,
  UnityQuickDailyBossResult_Grade_FiveStar = 5
};
bool UnityQuickDailyBossResult_Grade_IsValid(int value);
const UnityQuickDailyBossResult_Grade UnityQuickDailyBossResult_Grade_Grade_MIN = UnityQuickDailyBossResult_Grade_OneStar;
const UnityQuickDailyBossResult_Grade UnityQuickDailyBossResult_Grade_Grade_MAX = UnityQuickDailyBossResult_Grade_FiveStar;
const int UnityQuickDailyBossResult_Grade_Grade_ARRAYSIZE = UnityQuickDailyBossResult_Grade_Grade_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnityQuickDailyBossResult_Grade_descriptor();
inline const ::std::string& UnityQuickDailyBossResult_Grade_Name(UnityQuickDailyBossResult_Grade value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnityQuickDailyBossResult_Grade_descriptor(), value);
}
inline bool UnityQuickDailyBossResult_Grade_Parse(
    const ::std::string& name, UnityQuickDailyBossResult_Grade* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnityQuickDailyBossResult_Grade>(
    UnityQuickDailyBossResult_Grade_descriptor(), name, value);
}
enum UnityQuickDailyBossResult_Limit {
  UnityQuickDailyBossResult_Limit_MAX_ADJUNTANT_SIZE = 4
};
bool UnityQuickDailyBossResult_Limit_IsValid(int value);
const UnityQuickDailyBossResult_Limit UnityQuickDailyBossResult_Limit_Limit_MIN = UnityQuickDailyBossResult_Limit_MAX_ADJUNTANT_SIZE;
const UnityQuickDailyBossResult_Limit UnityQuickDailyBossResult_Limit_Limit_MAX = UnityQuickDailyBossResult_Limit_MAX_ADJUNTANT_SIZE;
const int UnityQuickDailyBossResult_Limit_Limit_ARRAYSIZE = UnityQuickDailyBossResult_Limit_Limit_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnityQuickDailyBossResult_Limit_descriptor();
inline const ::std::string& UnityQuickDailyBossResult_Limit_Name(UnityQuickDailyBossResult_Limit value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnityQuickDailyBossResult_Limit_descriptor(), value);
}
inline bool UnityQuickDailyBossResult_Limit_Parse(
    const ::std::string& name, UnityQuickDailyBossResult_Limit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnityQuickDailyBossResult_Limit>(
    UnityQuickDailyBossResult_Limit_descriptor(), name, value);
}
// ===================================================================

class UnityQuickDailyBossResult_AdjuntantState : public ::google::protobuf::Message {
 public:
  UnityQuickDailyBossResult_AdjuntantState();
  virtual ~UnityQuickDailyBossResult_AdjuntantState();
  
  UnityQuickDailyBossResult_AdjuntantState(const UnityQuickDailyBossResult_AdjuntantState& from);
  
  inline UnityQuickDailyBossResult_AdjuntantState& operator=(const UnityQuickDailyBossResult_AdjuntantState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnityQuickDailyBossResult_AdjuntantState& default_instance();
  
  void Swap(UnityQuickDailyBossResult_AdjuntantState* other);
  
  // implements Message ----------------------------------------------
  
  UnityQuickDailyBossResult_AdjuntantState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnityQuickDailyBossResult_AdjuntantState& from);
  void MergeFrom(const UnityQuickDailyBossResult_AdjuntantState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required bool is_alive = 2;
  inline bool has_is_alive() const;
  inline void clear_is_alive();
  static const int kIsAliveFieldNumber = 2;
  inline bool is_alive() const;
  inline void set_is_alive(bool value);
  
  // @@protoc_insertion_point(class_scope:game_connection.UnityQuickDailyBossResult.AdjuntantState)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_alive();
  inline void clear_has_is_alive();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  bool is_alive_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_UnityQuickDailyBossResult_2eproto();
  friend void protobuf_AssignDesc_UnityQuickDailyBossResult_2eproto();
  friend void protobuf_ShutdownFile_UnityQuickDailyBossResult_2eproto();
  
  void InitAsDefaultInstance();
  static UnityQuickDailyBossResult_AdjuntantState* default_instance_;
};
// -------------------------------------------------------------------

class UnityQuickDailyBossResult : public ::google::protobuf::Message {
 public:
  UnityQuickDailyBossResult();
  virtual ~UnityQuickDailyBossResult();
  
  UnityQuickDailyBossResult(const UnityQuickDailyBossResult& from);
  
  inline UnityQuickDailyBossResult& operator=(const UnityQuickDailyBossResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnityQuickDailyBossResult& default_instance();
  
  void Swap(UnityQuickDailyBossResult* other);
  
  // implements Message ----------------------------------------------
  
  UnityQuickDailyBossResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnityQuickDailyBossResult& from);
  void MergeFrom(const UnityQuickDailyBossResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef UnityQuickDailyBossResult_AdjuntantState AdjuntantState;
  
  typedef UnityQuickDailyBossResult_traits traits;
  static const traits value = UnityQuickDailyBossResult_traits_value;
  static inline bool traits_IsValid(int value) {
    return UnityQuickDailyBossResult_traits_IsValid(value);
  }
  static const traits traits_MIN =
    UnityQuickDailyBossResult_traits_traits_MIN;
  static const traits traits_MAX =
    UnityQuickDailyBossResult_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    UnityQuickDailyBossResult_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return UnityQuickDailyBossResult_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return UnityQuickDailyBossResult_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return UnityQuickDailyBossResult_traits_Parse(name, value);
  }
  
  typedef UnityQuickDailyBossResult_Grade Grade;
  static const Grade OneStar = UnityQuickDailyBossResult_Grade_OneStar;
  static const Grade TwoStar = UnityQuickDailyBossResult_Grade_TwoStar;
  static const Grade ThreeStar = UnityQuickDailyBossResult_Grade_ThreeStar;
  static const Grade FourStar = UnityQuickDailyBossResult_Grade_FourStar;
  static const Grade FiveStar = UnityQuickDailyBossResult_Grade_FiveStar;
  static inline bool Grade_IsValid(int value) {
    return UnityQuickDailyBossResult_Grade_IsValid(value);
  }
  static const Grade Grade_MIN =
    UnityQuickDailyBossResult_Grade_Grade_MIN;
  static const Grade Grade_MAX =
    UnityQuickDailyBossResult_Grade_Grade_MAX;
  static const int Grade_ARRAYSIZE =
    UnityQuickDailyBossResult_Grade_Grade_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Grade_descriptor() {
    return UnityQuickDailyBossResult_Grade_descriptor();
  }
  static inline const ::std::string& Grade_Name(Grade value) {
    return UnityQuickDailyBossResult_Grade_Name(value);
  }
  static inline bool Grade_Parse(const ::std::string& name,
      Grade* value) {
    return UnityQuickDailyBossResult_Grade_Parse(name, value);
  }
  
  typedef UnityQuickDailyBossResult_Limit Limit;
  static const Limit MAX_ADJUNTANT_SIZE = UnityQuickDailyBossResult_Limit_MAX_ADJUNTANT_SIZE;
  static inline bool Limit_IsValid(int value) {
    return UnityQuickDailyBossResult_Limit_IsValid(value);
  }
  static const Limit Limit_MIN =
    UnityQuickDailyBossResult_Limit_Limit_MIN;
  static const Limit Limit_MAX =
    UnityQuickDailyBossResult_Limit_Limit_MAX;
  static const int Limit_ARRAYSIZE =
    UnityQuickDailyBossResult_Limit_Limit_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Limit_descriptor() {
    return UnityQuickDailyBossResult_Limit_descriptor();
  }
  static inline const ::std::string& Limit_Name(Limit value) {
    return UnityQuickDailyBossResult_Limit_Name(value);
  }
  static inline bool Limit_Parse(const ::std::string& name,
      Limit* value) {
    return UnityQuickDailyBossResult_Limit_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required bool is_win = 1;
  inline bool has_is_win() const;
  inline void clear_is_win();
  static const int kIsWinFieldNumber = 1;
  inline bool is_win() const;
  inline void set_is_win(bool value);
  
  // required int32 boss_id = 2;
  inline bool has_boss_id() const;
  inline void clear_boss_id();
  static const int kBossIdFieldNumber = 2;
  inline ::google::protobuf::int32 boss_id() const;
  inline void set_boss_id(::google::protobuf::int32 value);
  
  // required .game_connection.UnityQuickDailyBossResult.Grade grade = 3;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 3;
  inline ::game_connection::UnityQuickDailyBossResult_Grade grade() const;
  inline void set_grade(::game_connection::UnityQuickDailyBossResult_Grade value);
  
  // repeated .game_connection.UnityQuickDailyBossResult.AdjuntantState adjuntant = 4;
  inline int adjuntant_size() const;
  inline void clear_adjuntant();
  static const int kAdjuntantFieldNumber = 4;
  inline const ::game_connection::UnityQuickDailyBossResult_AdjuntantState& adjuntant(int index) const;
  inline ::game_connection::UnityQuickDailyBossResult_AdjuntantState* mutable_adjuntant(int index);
  inline ::game_connection::UnityQuickDailyBossResult_AdjuntantState* add_adjuntant();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::UnityQuickDailyBossResult_AdjuntantState >&
      adjuntant() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::UnityQuickDailyBossResult_AdjuntantState >*
      mutable_adjuntant();
  
  // optional int32 used_seconds = 5;
  inline bool has_used_seconds() const;
  inline void clear_used_seconds();
  static const int kUsedSecondsFieldNumber = 5;
  inline ::google::protobuf::int32 used_seconds() const;
  inline void set_used_seconds(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.UnityQuickDailyBossResult)
 private:
  inline void set_has_is_win();
  inline void clear_has_is_win();
  inline void set_has_boss_id();
  inline void clear_has_boss_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_used_seconds();
  inline void clear_has_used_seconds();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_win_;
  ::google::protobuf::int32 boss_id_;
  ::google::protobuf::RepeatedPtrField< ::game_connection::UnityQuickDailyBossResult_AdjuntantState > adjuntant_;
  int grade_;
  ::google::protobuf::int32 used_seconds_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_UnityQuickDailyBossResult_2eproto();
  friend void protobuf_AssignDesc_UnityQuickDailyBossResult_2eproto();
  friend void protobuf_ShutdownFile_UnityQuickDailyBossResult_2eproto();
  
  void InitAsDefaultInstance();
  static UnityQuickDailyBossResult* default_instance_;
};
// ===================================================================


// ===================================================================

// UnityQuickDailyBossResult_AdjuntantState

// required int32 id = 1;
inline bool UnityQuickDailyBossResult_AdjuntantState::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnityQuickDailyBossResult_AdjuntantState::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnityQuickDailyBossResult_AdjuntantState::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnityQuickDailyBossResult_AdjuntantState::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 UnityQuickDailyBossResult_AdjuntantState::id() const {
  return id_;
}
inline void UnityQuickDailyBossResult_AdjuntantState::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required bool is_alive = 2;
inline bool UnityQuickDailyBossResult_AdjuntantState::has_is_alive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnityQuickDailyBossResult_AdjuntantState::set_has_is_alive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnityQuickDailyBossResult_AdjuntantState::clear_has_is_alive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnityQuickDailyBossResult_AdjuntantState::clear_is_alive() {
  is_alive_ = false;
  clear_has_is_alive();
}
inline bool UnityQuickDailyBossResult_AdjuntantState::is_alive() const {
  return is_alive_;
}
inline void UnityQuickDailyBossResult_AdjuntantState::set_is_alive(bool value) {
  set_has_is_alive();
  is_alive_ = value;
}

// -------------------------------------------------------------------

// UnityQuickDailyBossResult

// required bool is_win = 1;
inline bool UnityQuickDailyBossResult::has_is_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnityQuickDailyBossResult::set_has_is_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnityQuickDailyBossResult::clear_has_is_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnityQuickDailyBossResult::clear_is_win() {
  is_win_ = false;
  clear_has_is_win();
}
inline bool UnityQuickDailyBossResult::is_win() const {
  return is_win_;
}
inline void UnityQuickDailyBossResult::set_is_win(bool value) {
  set_has_is_win();
  is_win_ = value;
}

// required int32 boss_id = 2;
inline bool UnityQuickDailyBossResult::has_boss_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnityQuickDailyBossResult::set_has_boss_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnityQuickDailyBossResult::clear_has_boss_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnityQuickDailyBossResult::clear_boss_id() {
  boss_id_ = 0;
  clear_has_boss_id();
}
inline ::google::protobuf::int32 UnityQuickDailyBossResult::boss_id() const {
  return boss_id_;
}
inline void UnityQuickDailyBossResult::set_boss_id(::google::protobuf::int32 value) {
  set_has_boss_id();
  boss_id_ = value;
}

// required .game_connection.UnityQuickDailyBossResult.Grade grade = 3;
inline bool UnityQuickDailyBossResult::has_grade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnityQuickDailyBossResult::set_has_grade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnityQuickDailyBossResult::clear_has_grade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnityQuickDailyBossResult::clear_grade() {
  grade_ = 1;
  clear_has_grade();
}
inline ::game_connection::UnityQuickDailyBossResult_Grade UnityQuickDailyBossResult::grade() const {
  return static_cast< ::game_connection::UnityQuickDailyBossResult_Grade >(grade_);
}
inline void UnityQuickDailyBossResult::set_grade(::game_connection::UnityQuickDailyBossResult_Grade value) {
  GOOGLE_DCHECK(::game_connection::UnityQuickDailyBossResult_Grade_IsValid(value));
  set_has_grade();
  grade_ = value;
}

// repeated .game_connection.UnityQuickDailyBossResult.AdjuntantState adjuntant = 4;
inline int UnityQuickDailyBossResult::adjuntant_size() const {
  return adjuntant_.size();
}
inline void UnityQuickDailyBossResult::clear_adjuntant() {
  adjuntant_.Clear();
}
inline const ::game_connection::UnityQuickDailyBossResult_AdjuntantState& UnityQuickDailyBossResult::adjuntant(int index) const {
  return adjuntant_.Get(index);
}
inline ::game_connection::UnityQuickDailyBossResult_AdjuntantState* UnityQuickDailyBossResult::mutable_adjuntant(int index) {
  return adjuntant_.Mutable(index);
}
inline ::game_connection::UnityQuickDailyBossResult_AdjuntantState* UnityQuickDailyBossResult::add_adjuntant() {
  return adjuntant_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::UnityQuickDailyBossResult_AdjuntantState >&
UnityQuickDailyBossResult::adjuntant() const {
  return adjuntant_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::UnityQuickDailyBossResult_AdjuntantState >*
UnityQuickDailyBossResult::mutable_adjuntant() {
  return &adjuntant_;
}

// optional int32 used_seconds = 5;
inline bool UnityQuickDailyBossResult::has_used_seconds() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnityQuickDailyBossResult::set_has_used_seconds() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnityQuickDailyBossResult::clear_has_used_seconds() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnityQuickDailyBossResult::clear_used_seconds() {
  used_seconds_ = 0;
  clear_has_used_seconds();
}
inline ::google::protobuf::int32 UnityQuickDailyBossResult::used_seconds() const {
  return used_seconds_;
}
inline void UnityQuickDailyBossResult::set_used_seconds(::google::protobuf::int32 value) {
  set_has_used_seconds();
  used_seconds_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::UnityQuickDailyBossResult_traits>() {
  return ::game_connection::UnityQuickDailyBossResult_traits_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::UnityQuickDailyBossResult_Grade>() {
  return ::game_connection::UnityQuickDailyBossResult_Grade_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::UnityQuickDailyBossResult_Limit>() {
  return ::game_connection::UnityQuickDailyBossResult_Limit_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UnityQuickDailyBossResult_2eproto__INCLUDED
