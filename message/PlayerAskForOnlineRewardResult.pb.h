// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerAskForOnlineRewardResult.proto

#ifndef PROTOBUF_PlayerAskForOnlineRewardResult_2eproto__INCLUDED
#define PROTOBUF_PlayerAskForOnlineRewardResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PlayerAskForOnlineRewardResult_2eproto();
void protobuf_AssignDesc_PlayerAskForOnlineRewardResult_2eproto();
void protobuf_ShutdownFile_PlayerAskForOnlineRewardResult_2eproto();

class PlayerAskForOnlineRewardResult;
class PlayerAskForOnlineRewardResult_Award;

enum PlayerAskForOnlineRewardResult_traits {
  PlayerAskForOnlineRewardResult_traits_value = 3251
};
bool PlayerAskForOnlineRewardResult_traits_IsValid(int value);
const PlayerAskForOnlineRewardResult_traits PlayerAskForOnlineRewardResult_traits_traits_MIN = PlayerAskForOnlineRewardResult_traits_value;
const PlayerAskForOnlineRewardResult_traits PlayerAskForOnlineRewardResult_traits_traits_MAX = PlayerAskForOnlineRewardResult_traits_value;
const int PlayerAskForOnlineRewardResult_traits_traits_ARRAYSIZE = PlayerAskForOnlineRewardResult_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerAskForOnlineRewardResult_traits_descriptor();
inline const ::std::string& PlayerAskForOnlineRewardResult_traits_Name(PlayerAskForOnlineRewardResult_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerAskForOnlineRewardResult_traits_descriptor(), value);
}
inline bool PlayerAskForOnlineRewardResult_traits_Parse(
    const ::std::string& name, PlayerAskForOnlineRewardResult_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerAskForOnlineRewardResult_traits>(
    PlayerAskForOnlineRewardResult_traits_descriptor(), name, value);
}
// ===================================================================

class PlayerAskForOnlineRewardResult_Award : public ::google::protobuf::Message {
 public:
  PlayerAskForOnlineRewardResult_Award();
  virtual ~PlayerAskForOnlineRewardResult_Award();
  
  PlayerAskForOnlineRewardResult_Award(const PlayerAskForOnlineRewardResult_Award& from);
  
  inline PlayerAskForOnlineRewardResult_Award& operator=(const PlayerAskForOnlineRewardResult_Award& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerAskForOnlineRewardResult_Award& default_instance();
  
  void Swap(PlayerAskForOnlineRewardResult_Award* other);
  
  // implements Message ----------------------------------------------
  
  PlayerAskForOnlineRewardResult_Award* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerAskForOnlineRewardResult_Award& from);
  void MergeFrom(const PlayerAskForOnlineRewardResult_Award& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required int32 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::int32 object_id() const;
  inline void set_object_id(::google::protobuf::int32 value);
  
  // required int32 size = 3;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 3;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);
  
  // required int32 order = 4;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 4;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.PlayerAskForOnlineRewardResult.Award)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_order();
  inline void clear_has_order();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 object_id_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 order_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerAskForOnlineRewardResult_2eproto();
  friend void protobuf_AssignDesc_PlayerAskForOnlineRewardResult_2eproto();
  friend void protobuf_ShutdownFile_PlayerAskForOnlineRewardResult_2eproto();
  
  void InitAsDefaultInstance();
  static PlayerAskForOnlineRewardResult_Award* default_instance_;
};
// -------------------------------------------------------------------

class PlayerAskForOnlineRewardResult : public ::google::protobuf::Message {
 public:
  PlayerAskForOnlineRewardResult();
  virtual ~PlayerAskForOnlineRewardResult();
  
  PlayerAskForOnlineRewardResult(const PlayerAskForOnlineRewardResult& from);
  
  inline PlayerAskForOnlineRewardResult& operator=(const PlayerAskForOnlineRewardResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerAskForOnlineRewardResult& default_instance();
  
  void Swap(PlayerAskForOnlineRewardResult* other);
  
  // implements Message ----------------------------------------------
  
  PlayerAskForOnlineRewardResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerAskForOnlineRewardResult& from);
  void MergeFrom(const PlayerAskForOnlineRewardResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PlayerAskForOnlineRewardResult_Award Award;
  
  typedef PlayerAskForOnlineRewardResult_traits traits;
  static const traits value = PlayerAskForOnlineRewardResult_traits_value;
  static inline bool traits_IsValid(int value) {
    return PlayerAskForOnlineRewardResult_traits_IsValid(value);
  }
  static const traits traits_MIN =
    PlayerAskForOnlineRewardResult_traits_traits_MIN;
  static const traits traits_MAX =
    PlayerAskForOnlineRewardResult_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    PlayerAskForOnlineRewardResult_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return PlayerAskForOnlineRewardResult_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return PlayerAskForOnlineRewardResult_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return PlayerAskForOnlineRewardResult_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .game_connection.PlayerAskForOnlineRewardResult.Award award = 1;
  inline int award_size() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 1;
  inline const ::game_connection::PlayerAskForOnlineRewardResult_Award& award(int index) const;
  inline ::game_connection::PlayerAskForOnlineRewardResult_Award* mutable_award(int index);
  inline ::game_connection::PlayerAskForOnlineRewardResult_Award* add_award();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::PlayerAskForOnlineRewardResult_Award >&
      award() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::PlayerAskForOnlineRewardResult_Award >*
      mutable_award();
  
  // @@protoc_insertion_point(class_scope:game_connection.PlayerAskForOnlineRewardResult)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::game_connection::PlayerAskForOnlineRewardResult_Award > award_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerAskForOnlineRewardResult_2eproto();
  friend void protobuf_AssignDesc_PlayerAskForOnlineRewardResult_2eproto();
  friend void protobuf_ShutdownFile_PlayerAskForOnlineRewardResult_2eproto();
  
  void InitAsDefaultInstance();
  static PlayerAskForOnlineRewardResult* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerAskForOnlineRewardResult_Award

// required int32 type = 1;
inline bool PlayerAskForOnlineRewardResult_Award::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerAskForOnlineRewardResult_Award::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerAskForOnlineRewardResult_Award::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerAskForOnlineRewardResult_Award::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PlayerAskForOnlineRewardResult_Award::type() const {
  return type_;
}
inline void PlayerAskForOnlineRewardResult_Award::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 object_id = 2;
inline bool PlayerAskForOnlineRewardResult_Award::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerAskForOnlineRewardResult_Award::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerAskForOnlineRewardResult_Award::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerAskForOnlineRewardResult_Award::clear_object_id() {
  object_id_ = 0;
  clear_has_object_id();
}
inline ::google::protobuf::int32 PlayerAskForOnlineRewardResult_Award::object_id() const {
  return object_id_;
}
inline void PlayerAskForOnlineRewardResult_Award::set_object_id(::google::protobuf::int32 value) {
  set_has_object_id();
  object_id_ = value;
}

// required int32 size = 3;
inline bool PlayerAskForOnlineRewardResult_Award::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerAskForOnlineRewardResult_Award::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerAskForOnlineRewardResult_Award::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerAskForOnlineRewardResult_Award::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 PlayerAskForOnlineRewardResult_Award::size() const {
  return size_;
}
inline void PlayerAskForOnlineRewardResult_Award::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
}

// required int32 order = 4;
inline bool PlayerAskForOnlineRewardResult_Award::has_order() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerAskForOnlineRewardResult_Award::set_has_order() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerAskForOnlineRewardResult_Award::clear_has_order() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerAskForOnlineRewardResult_Award::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 PlayerAskForOnlineRewardResult_Award::order() const {
  return order_;
}
inline void PlayerAskForOnlineRewardResult_Award::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
}

// -------------------------------------------------------------------

// PlayerAskForOnlineRewardResult

// repeated .game_connection.PlayerAskForOnlineRewardResult.Award award = 1;
inline int PlayerAskForOnlineRewardResult::award_size() const {
  return award_.size();
}
inline void PlayerAskForOnlineRewardResult::clear_award() {
  award_.Clear();
}
inline const ::game_connection::PlayerAskForOnlineRewardResult_Award& PlayerAskForOnlineRewardResult::award(int index) const {
  return award_.Get(index);
}
inline ::game_connection::PlayerAskForOnlineRewardResult_Award* PlayerAskForOnlineRewardResult::mutable_award(int index) {
  return award_.Mutable(index);
}
inline ::game_connection::PlayerAskForOnlineRewardResult_Award* PlayerAskForOnlineRewardResult::add_award() {
  return award_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::PlayerAskForOnlineRewardResult_Award >&
PlayerAskForOnlineRewardResult::award() const {
  return award_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::PlayerAskForOnlineRewardResult_Award >*
PlayerAskForOnlineRewardResult::mutable_award() {
  return &award_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::PlayerAskForOnlineRewardResult_traits>() {
  return ::game_connection::PlayerAskForOnlineRewardResult_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerAskForOnlineRewardResult_2eproto__INCLUDED
