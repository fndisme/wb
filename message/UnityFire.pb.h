// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnityFire.proto

#ifndef PROTOBUF_UnityFire_2eproto__INCLUDED
#define PROTOBUF_UnityFire_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UnityFire_2eproto();
void protobuf_AssignDesc_UnityFire_2eproto();
void protobuf_ShutdownFile_UnityFire_2eproto();

class UnityFire;
class UnityFire_DeadPlayer;

enum UnityFire_traits {
  UnityFire_traits_value = 3596
};
bool UnityFire_traits_IsValid(int value);
const UnityFire_traits UnityFire_traits_traits_MIN = UnityFire_traits_value;
const UnityFire_traits UnityFire_traits_traits_MAX = UnityFire_traits_value;
const int UnityFire_traits_traits_ARRAYSIZE = UnityFire_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnityFire_traits_descriptor();
inline const ::std::string& UnityFire_traits_Name(UnityFire_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnityFire_traits_descriptor(), value);
}
inline bool UnityFire_traits_Parse(
    const ::std::string& name, UnityFire_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnityFire_traits>(
    UnityFire_traits_descriptor(), name, value);
}
// ===================================================================

class UnityFire_DeadPlayer : public ::google::protobuf::Message {
 public:
  UnityFire_DeadPlayer();
  virtual ~UnityFire_DeadPlayer();
  
  UnityFire_DeadPlayer(const UnityFire_DeadPlayer& from);
  
  inline UnityFire_DeadPlayer& operator=(const UnityFire_DeadPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnityFire_DeadPlayer& default_instance();
  
  void Swap(UnityFire_DeadPlayer* other);
  
  // implements Message ----------------------------------------------
  
  UnityFire_DeadPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnityFire_DeadPlayer& from);
  void MergeFrom(const UnityFire_DeadPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 server_id = 2;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.UnityFire.DeadPlayer)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 server_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_UnityFire_2eproto();
  friend void protobuf_AssignDesc_UnityFire_2eproto();
  friend void protobuf_ShutdownFile_UnityFire_2eproto();
  
  void InitAsDefaultInstance();
  static UnityFire_DeadPlayer* default_instance_;
};
// -------------------------------------------------------------------

class UnityFire : public ::google::protobuf::Message {
 public:
  UnityFire();
  virtual ~UnityFire();
  
  UnityFire(const UnityFire& from);
  
  inline UnityFire& operator=(const UnityFire& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnityFire& default_instance();
  
  void Swap(UnityFire* other);
  
  // implements Message ----------------------------------------------
  
  UnityFire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnityFire& from);
  void MergeFrom(const UnityFire& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef UnityFire_DeadPlayer DeadPlayer;
  
  typedef UnityFire_traits traits;
  static const traits value = UnityFire_traits_value;
  static inline bool traits_IsValid(int value) {
    return UnityFire_traits_IsValid(value);
  }
  static const traits traits_MIN =
    UnityFire_traits_traits_MIN;
  static const traits traits_MAX =
    UnityFire_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    UnityFire_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return UnityFire_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return UnityFire_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return UnityFire_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 server_id = 7;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 7;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // required int32 power = 2;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 2;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);
  
  // required int32 h_ran = 3;
  inline bool has_h_ran() const;
  inline void clear_h_ran();
  static const int kHRanFieldNumber = 3;
  inline ::google::protobuf::int32 h_ran() const;
  inline void set_h_ran(::google::protobuf::int32 value);
  
  // required int32 v_ran = 4;
  inline bool has_v_ran() const;
  inline void clear_v_ran();
  static const int kVRanFieldNumber = 4;
  inline ::google::protobuf::int32 v_ran() const;
  inline void set_v_ran(::google::protobuf::int32 value);
  
  // required int32 debug_time = 5;
  inline bool has_debug_time() const;
  inline void clear_debug_time();
  static const int kDebugTimeFieldNumber = 5;
  inline ::google::protobuf::int32 debug_time() const;
  inline void set_debug_time(::google::protobuf::int32 value);
  
  // repeated .game_connection.UnityFire.DeadPlayer dead_player = 6;
  inline int dead_player_size() const;
  inline void clear_dead_player();
  static const int kDeadPlayerFieldNumber = 6;
  inline const ::game_connection::UnityFire_DeadPlayer& dead_player(int index) const;
  inline ::game_connection::UnityFire_DeadPlayer* mutable_dead_player(int index);
  inline ::game_connection::UnityFire_DeadPlayer* add_dead_player();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::UnityFire_DeadPlayer >&
      dead_player() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::UnityFire_DeadPlayer >*
      mutable_dead_player();
  
  // @@protoc_insertion_point(class_scope:game_connection.UnityFire)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_h_ran();
  inline void clear_has_h_ran();
  inline void set_has_v_ran();
  inline void clear_has_v_ran();
  inline void set_has_debug_time();
  inline void clear_has_debug_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 power_;
  ::google::protobuf::int32 h_ran_;
  ::google::protobuf::int32 v_ran_;
  ::google::protobuf::int32 debug_time_;
  ::google::protobuf::RepeatedPtrField< ::game_connection::UnityFire_DeadPlayer > dead_player_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_UnityFire_2eproto();
  friend void protobuf_AssignDesc_UnityFire_2eproto();
  friend void protobuf_ShutdownFile_UnityFire_2eproto();
  
  void InitAsDefaultInstance();
  static UnityFire* default_instance_;
};
// ===================================================================


// ===================================================================

// UnityFire_DeadPlayer

// required int32 id = 1;
inline bool UnityFire_DeadPlayer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnityFire_DeadPlayer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnityFire_DeadPlayer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnityFire_DeadPlayer::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 UnityFire_DeadPlayer::id() const {
  return id_;
}
inline void UnityFire_DeadPlayer::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 server_id = 2;
inline bool UnityFire_DeadPlayer::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnityFire_DeadPlayer::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnityFire_DeadPlayer::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnityFire_DeadPlayer::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 UnityFire_DeadPlayer::server_id() const {
  return server_id_;
}
inline void UnityFire_DeadPlayer::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// -------------------------------------------------------------------

// UnityFire

// required int32 id = 1;
inline bool UnityFire::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnityFire::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnityFire::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnityFire::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 UnityFire::id() const {
  return id_;
}
inline void UnityFire::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 server_id = 7;
inline bool UnityFire::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnityFire::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnityFire::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnityFire::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 UnityFire::server_id() const {
  return server_id_;
}
inline void UnityFire::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// required int32 power = 2;
inline bool UnityFire::has_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnityFire::set_has_power() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnityFire::clear_has_power() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnityFire::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 UnityFire::power() const {
  return power_;
}
inline void UnityFire::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// required int32 h_ran = 3;
inline bool UnityFire::has_h_ran() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnityFire::set_has_h_ran() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnityFire::clear_has_h_ran() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnityFire::clear_h_ran() {
  h_ran_ = 0;
  clear_has_h_ran();
}
inline ::google::protobuf::int32 UnityFire::h_ran() const {
  return h_ran_;
}
inline void UnityFire::set_h_ran(::google::protobuf::int32 value) {
  set_has_h_ran();
  h_ran_ = value;
}

// required int32 v_ran = 4;
inline bool UnityFire::has_v_ran() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnityFire::set_has_v_ran() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnityFire::clear_has_v_ran() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnityFire::clear_v_ran() {
  v_ran_ = 0;
  clear_has_v_ran();
}
inline ::google::protobuf::int32 UnityFire::v_ran() const {
  return v_ran_;
}
inline void UnityFire::set_v_ran(::google::protobuf::int32 value) {
  set_has_v_ran();
  v_ran_ = value;
}

// required int32 debug_time = 5;
inline bool UnityFire::has_debug_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UnityFire::set_has_debug_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UnityFire::clear_has_debug_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UnityFire::clear_debug_time() {
  debug_time_ = 0;
  clear_has_debug_time();
}
inline ::google::protobuf::int32 UnityFire::debug_time() const {
  return debug_time_;
}
inline void UnityFire::set_debug_time(::google::protobuf::int32 value) {
  set_has_debug_time();
  debug_time_ = value;
}

// repeated .game_connection.UnityFire.DeadPlayer dead_player = 6;
inline int UnityFire::dead_player_size() const {
  return dead_player_.size();
}
inline void UnityFire::clear_dead_player() {
  dead_player_.Clear();
}
inline const ::game_connection::UnityFire_DeadPlayer& UnityFire::dead_player(int index) const {
  return dead_player_.Get(index);
}
inline ::game_connection::UnityFire_DeadPlayer* UnityFire::mutable_dead_player(int index) {
  return dead_player_.Mutable(index);
}
inline ::game_connection::UnityFire_DeadPlayer* UnityFire::add_dead_player() {
  return dead_player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::UnityFire_DeadPlayer >&
UnityFire::dead_player() const {
  return dead_player_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::UnityFire_DeadPlayer >*
UnityFire::mutable_dead_player() {
  return &dead_player_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::UnityFire_traits>() {
  return ::game_connection::UnityFire_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UnityFire_2eproto__INCLUDED
