// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnityInitTreasureInformation.proto

#ifndef PROTOBUF_UnityInitTreasureInformation_2eproto__INCLUDED
#define PROTOBUF_UnityInitTreasureInformation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UnityInitTreasureInformation_2eproto();
void protobuf_AssignDesc_UnityInitTreasureInformation_2eproto();
void protobuf_ShutdownFile_UnityInitTreasureInformation_2eproto();

class UnityInitTreasureInformation;

enum UnityInitTreasureInformation_traits {
  UnityInitTreasureInformation_traits_value = 3532
};
bool UnityInitTreasureInformation_traits_IsValid(int value);
const UnityInitTreasureInformation_traits UnityInitTreasureInformation_traits_traits_MIN = UnityInitTreasureInformation_traits_value;
const UnityInitTreasureInformation_traits UnityInitTreasureInformation_traits_traits_MAX = UnityInitTreasureInformation_traits_value;
const int UnityInitTreasureInformation_traits_traits_ARRAYSIZE = UnityInitTreasureInformation_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnityInitTreasureInformation_traits_descriptor();
inline const ::std::string& UnityInitTreasureInformation_traits_Name(UnityInitTreasureInformation_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnityInitTreasureInformation_traits_descriptor(), value);
}
inline bool UnityInitTreasureInformation_traits_Parse(
    const ::std::string& name, UnityInitTreasureInformation_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnityInitTreasureInformation_traits>(
    UnityInitTreasureInformation_traits_descriptor(), name, value);
}
// ===================================================================

class UnityInitTreasureInformation : public ::google::protobuf::Message {
 public:
  UnityInitTreasureInformation();
  virtual ~UnityInitTreasureInformation();
  
  UnityInitTreasureInformation(const UnityInitTreasureInformation& from);
  
  inline UnityInitTreasureInformation& operator=(const UnityInitTreasureInformation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnityInitTreasureInformation& default_instance();
  
  void Swap(UnityInitTreasureInformation* other);
  
  // implements Message ----------------------------------------------
  
  UnityInitTreasureInformation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnityInitTreasureInformation& from);
  void MergeFrom(const UnityInitTreasureInformation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef UnityInitTreasureInformation_traits traits;
  static const traits value = UnityInitTreasureInformation_traits_value;
  static inline bool traits_IsValid(int value) {
    return UnityInitTreasureInformation_traits_IsValid(value);
  }
  static const traits traits_MIN =
    UnityInitTreasureInformation_traits_traits_MIN;
  static const traits traits_MAX =
    UnityInitTreasureInformation_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    UnityInitTreasureInformation_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return UnityInitTreasureInformation_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return UnityInitTreasureInformation_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return UnityInitTreasureInformation_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated bytes information = 1;
  inline int information_size() const;
  inline void clear_information();
  static const int kInformationFieldNumber = 1;
  inline const ::std::string& information(int index) const;
  inline ::std::string* mutable_information(int index);
  inline void set_information(int index, const ::std::string& value);
  inline void set_information(int index, const char* value);
  inline void set_information(int index, const void* value, size_t size);
  inline ::std::string* add_information();
  inline void add_information(const ::std::string& value);
  inline void add_information(const char* value);
  inline void add_information(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& information() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_information();
  
  // @@protoc_insertion_point(class_scope:game_connection.UnityInitTreasureInformation)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> information_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_UnityInitTreasureInformation_2eproto();
  friend void protobuf_AssignDesc_UnityInitTreasureInformation_2eproto();
  friend void protobuf_ShutdownFile_UnityInitTreasureInformation_2eproto();
  
  void InitAsDefaultInstance();
  static UnityInitTreasureInformation* default_instance_;
};
// ===================================================================


// ===================================================================

// UnityInitTreasureInformation

// repeated bytes information = 1;
inline int UnityInitTreasureInformation::information_size() const {
  return information_.size();
}
inline void UnityInitTreasureInformation::clear_information() {
  information_.Clear();
}
inline const ::std::string& UnityInitTreasureInformation::information(int index) const {
  return information_.Get(index);
}
inline ::std::string* UnityInitTreasureInformation::mutable_information(int index) {
  return information_.Mutable(index);
}
inline void UnityInitTreasureInformation::set_information(int index, const ::std::string& value) {
  information_.Mutable(index)->assign(value);
}
inline void UnityInitTreasureInformation::set_information(int index, const char* value) {
  information_.Mutable(index)->assign(value);
}
inline void UnityInitTreasureInformation::set_information(int index, const void* value, size_t size) {
  information_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UnityInitTreasureInformation::add_information() {
  return information_.Add();
}
inline void UnityInitTreasureInformation::add_information(const ::std::string& value) {
  information_.Add()->assign(value);
}
inline void UnityInitTreasureInformation::add_information(const char* value) {
  information_.Add()->assign(value);
}
inline void UnityInitTreasureInformation::add_information(const void* value, size_t size) {
  information_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UnityInitTreasureInformation::information() const {
  return information_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UnityInitTreasureInformation::mutable_information() {
  return &information_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::UnityInitTreasureInformation_traits>() {
  return ::game_connection::UnityInitTreasureInformation_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UnityInitTreasureInformation_2eproto__INCLUDED
