// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DigTreasureResult.proto

#ifndef PROTOBUF_DigTreasureResult_2eproto__INCLUDED
#define PROTOBUF_DigTreasureResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DigTreasureResult_2eproto();
void protobuf_AssignDesc_DigTreasureResult_2eproto();
void protobuf_ShutdownFile_DigTreasureResult_2eproto();

class DigTreasureResult;

enum DigTreasureResult_traits {
  DigTreasureResult_traits_value = 3091
};
bool DigTreasureResult_traits_IsValid(int value);
const DigTreasureResult_traits DigTreasureResult_traits_traits_MIN = DigTreasureResult_traits_value;
const DigTreasureResult_traits DigTreasureResult_traits_traits_MAX = DigTreasureResult_traits_value;
const int DigTreasureResult_traits_traits_ARRAYSIZE = DigTreasureResult_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* DigTreasureResult_traits_descriptor();
inline const ::std::string& DigTreasureResult_traits_Name(DigTreasureResult_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    DigTreasureResult_traits_descriptor(), value);
}
inline bool DigTreasureResult_traits_Parse(
    const ::std::string& name, DigTreasureResult_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DigTreasureResult_traits>(
    DigTreasureResult_traits_descriptor(), name, value);
}
// ===================================================================

class DigTreasureResult : public ::google::protobuf::Message {
 public:
  DigTreasureResult();
  virtual ~DigTreasureResult();
  
  DigTreasureResult(const DigTreasureResult& from);
  
  inline DigTreasureResult& operator=(const DigTreasureResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DigTreasureResult& default_instance();
  
  void Swap(DigTreasureResult* other);
  
  // implements Message ----------------------------------------------
  
  DigTreasureResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DigTreasureResult& from);
  void MergeFrom(const DigTreasureResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef DigTreasureResult_traits traits;
  static const traits value = DigTreasureResult_traits_value;
  static inline bool traits_IsValid(int value) {
    return DigTreasureResult_traits_IsValid(value);
  }
  static const traits traits_MIN =
    DigTreasureResult_traits_traits_MIN;
  static const traits traits_MAX =
    DigTreasureResult_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    DigTreasureResult_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return DigTreasureResult_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return DigTreasureResult_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return DigTreasureResult_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required bool is_dig_ok = 1;
  inline bool has_is_dig_ok() const;
  inline void clear_is_dig_ok();
  static const int kIsDigOkFieldNumber = 1;
  inline bool is_dig_ok() const;
  inline void set_is_dig_ok(bool value);
  
  // optional int32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 page = 2;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 2;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
  // optional int32 cell = 3;
  inline bool has_cell() const;
  inline void clear_cell();
  static const int kCellFieldNumber = 3;
  inline ::google::protobuf::int32 cell() const;
  inline void set_cell(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.DigTreasureResult)
 private:
  inline void set_has_is_dig_ok();
  inline void clear_has_is_dig_ok();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_cell();
  inline void clear_has_cell();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_dig_ok_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 page_;
  ::google::protobuf::int32 cell_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_DigTreasureResult_2eproto();
  friend void protobuf_AssignDesc_DigTreasureResult_2eproto();
  friend void protobuf_ShutdownFile_DigTreasureResult_2eproto();
  
  void InitAsDefaultInstance();
  static DigTreasureResult* default_instance_;
};
// ===================================================================


// ===================================================================

// DigTreasureResult

// required bool is_dig_ok = 1;
inline bool DigTreasureResult::has_is_dig_ok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DigTreasureResult::set_has_is_dig_ok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DigTreasureResult::clear_has_is_dig_ok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DigTreasureResult::clear_is_dig_ok() {
  is_dig_ok_ = false;
  clear_has_is_dig_ok();
}
inline bool DigTreasureResult::is_dig_ok() const {
  return is_dig_ok_;
}
inline void DigTreasureResult::set_is_dig_ok(bool value) {
  set_has_is_dig_ok();
  is_dig_ok_ = value;
}

// optional int32 id = 4;
inline bool DigTreasureResult::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DigTreasureResult::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DigTreasureResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DigTreasureResult::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DigTreasureResult::id() const {
  return id_;
}
inline void DigTreasureResult::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 page = 2;
inline bool DigTreasureResult::has_page() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DigTreasureResult::set_has_page() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DigTreasureResult::clear_has_page() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DigTreasureResult::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 DigTreasureResult::page() const {
  return page_;
}
inline void DigTreasureResult::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// optional int32 cell = 3;
inline bool DigTreasureResult::has_cell() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DigTreasureResult::set_has_cell() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DigTreasureResult::clear_has_cell() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DigTreasureResult::clear_cell() {
  cell_ = 0;
  clear_has_cell();
}
inline ::google::protobuf::int32 DigTreasureResult::cell() const {
  return cell_;
}
inline void DigTreasureResult::set_cell(::google::protobuf::int32 value) {
  set_has_cell();
  cell_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::DigTreasureResult_traits>() {
  return ::game_connection::DigTreasureResult_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DigTreasureResult_2eproto__INCLUDED
