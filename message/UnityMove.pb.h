// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnityMove.proto

#ifndef PROTOBUF_UnityMove_2eproto__INCLUDED
#define PROTOBUF_UnityMove_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UnityMove_2eproto();
void protobuf_AssignDesc_UnityMove_2eproto();
void protobuf_ShutdownFile_UnityMove_2eproto();

class UnityMove;

enum UnityMove_traits {
  UnityMove_traits_value = 3597
};
bool UnityMove_traits_IsValid(int value);
const UnityMove_traits UnityMove_traits_traits_MIN = UnityMove_traits_value;
const UnityMove_traits UnityMove_traits_traits_MAX = UnityMove_traits_value;
const int UnityMove_traits_traits_ARRAYSIZE = UnityMove_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnityMove_traits_descriptor();
inline const ::std::string& UnityMove_traits_Name(UnityMove_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnityMove_traits_descriptor(), value);
}
inline bool UnityMove_traits_Parse(
    const ::std::string& name, UnityMove_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnityMove_traits>(
    UnityMove_traits_descriptor(), name, value);
}
// ===================================================================

class UnityMove : public ::google::protobuf::Message {
 public:
  UnityMove();
  virtual ~UnityMove();
  
  UnityMove(const UnityMove& from);
  
  inline UnityMove& operator=(const UnityMove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnityMove& default_instance();
  
  void Swap(UnityMove* other);
  
  // implements Message ----------------------------------------------
  
  UnityMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnityMove& from);
  void MergeFrom(const UnityMove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef UnityMove_traits traits;
  static const traits value = UnityMove_traits_value;
  static inline bool traits_IsValid(int value) {
    return UnityMove_traits_IsValid(value);
  }
  static const traits traits_MIN =
    UnityMove_traits_traits_MIN;
  static const traits traits_MAX =
    UnityMove_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    UnityMove_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return UnityMove_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return UnityMove_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return UnityMove_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 server_id = 2;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // required int32 move_time = 3;
  inline bool has_move_time() const;
  inline void clear_move_time();
  static const int kMoveTimeFieldNumber = 3;
  inline ::google::protobuf::int32 move_time() const;
  inline void set_move_time(::google::protobuf::int32 value);
  
  // required sint32 x = 4;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // required sint32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // required sint32 z = 6;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 6;
  inline ::google::protobuf::int32 z() const;
  inline void set_z(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.UnityMove)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_move_time();
  inline void clear_has_move_time();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 move_time_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_UnityMove_2eproto();
  friend void protobuf_AssignDesc_UnityMove_2eproto();
  friend void protobuf_ShutdownFile_UnityMove_2eproto();
  
  void InitAsDefaultInstance();
  static UnityMove* default_instance_;
};
// ===================================================================


// ===================================================================

// UnityMove

// required int32 id = 1;
inline bool UnityMove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnityMove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnityMove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnityMove::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 UnityMove::id() const {
  return id_;
}
inline void UnityMove::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 server_id = 2;
inline bool UnityMove::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnityMove::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnityMove::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnityMove::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 UnityMove::server_id() const {
  return server_id_;
}
inline void UnityMove::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// required int32 move_time = 3;
inline bool UnityMove::has_move_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnityMove::set_has_move_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnityMove::clear_has_move_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnityMove::clear_move_time() {
  move_time_ = 0;
  clear_has_move_time();
}
inline ::google::protobuf::int32 UnityMove::move_time() const {
  return move_time_;
}
inline void UnityMove::set_move_time(::google::protobuf::int32 value) {
  set_has_move_time();
  move_time_ = value;
}

// required sint32 x = 4;
inline bool UnityMove::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnityMove::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnityMove::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnityMove::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 UnityMove::x() const {
  return x_;
}
inline void UnityMove::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required sint32 y = 5;
inline bool UnityMove::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnityMove::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnityMove::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnityMove::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 UnityMove::y() const {
  return y_;
}
inline void UnityMove::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// required sint32 z = 6;
inline bool UnityMove::has_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UnityMove::set_has_z() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UnityMove::clear_has_z() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UnityMove::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 UnityMove::z() const {
  return z_;
}
inline void UnityMove::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::UnityMove_traits>() {
  return ::game_connection::UnityMove_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UnityMove_2eproto__INCLUDED
