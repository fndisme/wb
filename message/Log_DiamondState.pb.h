// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Log_DiamondState.proto

#ifndef PROTOBUF_Log_5fDiamondState_2eproto__INCLUDED
#define PROTOBUF_Log_5fDiamondState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Log_5fDiamondState_2eproto();
void protobuf_AssignDesc_Log_5fDiamondState_2eproto();
void protobuf_ShutdownFile_Log_5fDiamondState_2eproto();

class Log_DiamondState;
class Log_DiamondState_VipState;

// ===================================================================

class Log_DiamondState_VipState : public ::google::protobuf::Message {
 public:
  Log_DiamondState_VipState();
  virtual ~Log_DiamondState_VipState();
  
  Log_DiamondState_VipState(const Log_DiamondState_VipState& from);
  
  inline Log_DiamondState_VipState& operator=(const Log_DiamondState_VipState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Log_DiamondState_VipState& default_instance();
  
  void Swap(Log_DiamondState_VipState* other);
  
  // implements Message ----------------------------------------------
  
  Log_DiamondState_VipState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Log_DiamondState_VipState& from);
  void MergeFrom(const Log_DiamondState_VipState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 total_in_history = 2;
  inline bool has_total_in_history() const;
  inline void clear_total_in_history();
  static const int kTotalInHistoryFieldNumber = 2;
  inline ::google::protobuf::int32 total_in_history() const;
  inline void set_total_in_history(::google::protobuf::int32 value);
  
  // required int32 current = 3;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 3;
  inline ::google::protobuf::int32 current() const;
  inline void set_current(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.Log_DiamondState.VipState)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_total_in_history();
  inline void clear_has_total_in_history();
  inline void set_has_current();
  inline void clear_has_current();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 total_in_history_;
  ::google::protobuf::int32 current_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Log_5fDiamondState_2eproto();
  friend void protobuf_AssignDesc_Log_5fDiamondState_2eproto();
  friend void protobuf_ShutdownFile_Log_5fDiamondState_2eproto();
  
  void InitAsDefaultInstance();
  static Log_DiamondState_VipState* default_instance_;
};
// -------------------------------------------------------------------

class Log_DiamondState : public ::google::protobuf::Message {
 public:
  Log_DiamondState();
  virtual ~Log_DiamondState();
  
  Log_DiamondState(const Log_DiamondState& from);
  
  inline Log_DiamondState& operator=(const Log_DiamondState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Log_DiamondState& default_instance();
  
  void Swap(Log_DiamondState* other);
  
  // implements Message ----------------------------------------------
  
  Log_DiamondState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Log_DiamondState& from);
  void MergeFrom(const Log_DiamondState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Log_DiamondState_VipState VipState;
  
  // accessors -------------------------------------------------------
  
  // required uint64 total = 1;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 1;
  inline ::google::protobuf::uint64 total() const;
  inline void set_total(::google::protobuf::uint64 value);
  
  // repeated .game_connection.Log_DiamondState.VipState vip = 2;
  inline int vip_size() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 2;
  inline const ::game_connection::Log_DiamondState_VipState& vip(int index) const;
  inline ::game_connection::Log_DiamondState_VipState* mutable_vip(int index);
  inline ::game_connection::Log_DiamondState_VipState* add_vip();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::Log_DiamondState_VipState >&
      vip() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::Log_DiamondState_VipState >*
      mutable_vip();
  
  // @@protoc_insertion_point(class_scope:game_connection.Log_DiamondState)
 private:
  inline void set_has_total();
  inline void clear_has_total();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 total_;
  ::google::protobuf::RepeatedPtrField< ::game_connection::Log_DiamondState_VipState > vip_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Log_5fDiamondState_2eproto();
  friend void protobuf_AssignDesc_Log_5fDiamondState_2eproto();
  friend void protobuf_ShutdownFile_Log_5fDiamondState_2eproto();
  
  void InitAsDefaultInstance();
  static Log_DiamondState* default_instance_;
};
// ===================================================================


// ===================================================================

// Log_DiamondState_VipState

// required int32 id = 1;
inline bool Log_DiamondState_VipState::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Log_DiamondState_VipState::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Log_DiamondState_VipState::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Log_DiamondState_VipState::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Log_DiamondState_VipState::id() const {
  return id_;
}
inline void Log_DiamondState_VipState::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 total_in_history = 2;
inline bool Log_DiamondState_VipState::has_total_in_history() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Log_DiamondState_VipState::set_has_total_in_history() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Log_DiamondState_VipState::clear_has_total_in_history() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Log_DiamondState_VipState::clear_total_in_history() {
  total_in_history_ = 0;
  clear_has_total_in_history();
}
inline ::google::protobuf::int32 Log_DiamondState_VipState::total_in_history() const {
  return total_in_history_;
}
inline void Log_DiamondState_VipState::set_total_in_history(::google::protobuf::int32 value) {
  set_has_total_in_history();
  total_in_history_ = value;
}

// required int32 current = 3;
inline bool Log_DiamondState_VipState::has_current() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Log_DiamondState_VipState::set_has_current() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Log_DiamondState_VipState::clear_has_current() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Log_DiamondState_VipState::clear_current() {
  current_ = 0;
  clear_has_current();
}
inline ::google::protobuf::int32 Log_DiamondState_VipState::current() const {
  return current_;
}
inline void Log_DiamondState_VipState::set_current(::google::protobuf::int32 value) {
  set_has_current();
  current_ = value;
}

// -------------------------------------------------------------------

// Log_DiamondState

// required uint64 total = 1;
inline bool Log_DiamondState::has_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Log_DiamondState::set_has_total() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Log_DiamondState::clear_has_total() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Log_DiamondState::clear_total() {
  total_ = GOOGLE_ULONGLONG(0);
  clear_has_total();
}
inline ::google::protobuf::uint64 Log_DiamondState::total() const {
  return total_;
}
inline void Log_DiamondState::set_total(::google::protobuf::uint64 value) {
  set_has_total();
  total_ = value;
}

// repeated .game_connection.Log_DiamondState.VipState vip = 2;
inline int Log_DiamondState::vip_size() const {
  return vip_.size();
}
inline void Log_DiamondState::clear_vip() {
  vip_.Clear();
}
inline const ::game_connection::Log_DiamondState_VipState& Log_DiamondState::vip(int index) const {
  return vip_.Get(index);
}
inline ::game_connection::Log_DiamondState_VipState* Log_DiamondState::mutable_vip(int index) {
  return vip_.Mutable(index);
}
inline ::game_connection::Log_DiamondState_VipState* Log_DiamondState::add_vip() {
  return vip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::Log_DiamondState_VipState >&
Log_DiamondState::vip() const {
  return vip_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::Log_DiamondState_VipState >*
Log_DiamondState::mutable_vip() {
  return &vip_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Log_5fDiamondState_2eproto__INCLUDED
