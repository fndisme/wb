// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerCache_ArmyGroup.proto

#ifndef PROTOBUF_ServerCache_5fArmyGroup_2eproto__INCLUDED
#define PROTOBUF_ServerCache_5fArmyGroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ServerCache_5fArmyGroup_2eproto();
void protobuf_AssignDesc_ServerCache_5fArmyGroup_2eproto();
void protobuf_ShutdownFile_ServerCache_5fArmyGroup_2eproto();

class ServerCache_AramyGroup;
class ServerCache_AramyGroup_Group;

// ===================================================================

class ServerCache_AramyGroup_Group : public ::google::protobuf::Message {
 public:
  ServerCache_AramyGroup_Group();
  virtual ~ServerCache_AramyGroup_Group();
  
  ServerCache_AramyGroup_Group(const ServerCache_AramyGroup_Group& from);
  
  inline ServerCache_AramyGroup_Group& operator=(const ServerCache_AramyGroup_Group& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCache_AramyGroup_Group& default_instance();
  
  void Swap(ServerCache_AramyGroup_Group* other);
  
  // implements Message ----------------------------------------------
  
  ServerCache_AramyGroup_Group* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCache_AramyGroup_Group& from);
  void MergeFrom(const ServerCache_AramyGroup_Group& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 chief_id = 1;
  inline bool has_chief_id() const;
  inline void clear_chief_id();
  static const int kChiefIdFieldNumber = 1;
  inline ::google::protobuf::int32 chief_id() const;
  inline void set_chief_id(::google::protobuf::int32 value);
  
  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required int32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // repeated int32 player = 4;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 4;
  inline ::google::protobuf::int32 player(int index) const;
  inline void set_player(int index, ::google::protobuf::int32 value);
  inline void add_player(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player();
  
  // @@protoc_insertion_point(class_scope:game_connection.ServerCache_AramyGroup.Group)
 private:
  inline void set_has_chief_id();
  inline void clear_has_chief_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 chief_id_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ServerCache_5fArmyGroup_2eproto();
  friend void protobuf_AssignDesc_ServerCache_5fArmyGroup_2eproto();
  friend void protobuf_ShutdownFile_ServerCache_5fArmyGroup_2eproto();
  
  void InitAsDefaultInstance();
  static ServerCache_AramyGroup_Group* default_instance_;
};
// -------------------------------------------------------------------

class ServerCache_AramyGroup : public ::google::protobuf::Message {
 public:
  ServerCache_AramyGroup();
  virtual ~ServerCache_AramyGroup();
  
  ServerCache_AramyGroup(const ServerCache_AramyGroup& from);
  
  inline ServerCache_AramyGroup& operator=(const ServerCache_AramyGroup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCache_AramyGroup& default_instance();
  
  void Swap(ServerCache_AramyGroup* other);
  
  // implements Message ----------------------------------------------
  
  ServerCache_AramyGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCache_AramyGroup& from);
  void MergeFrom(const ServerCache_AramyGroup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ServerCache_AramyGroup_Group Group;
  
  // accessors -------------------------------------------------------
  
  // repeated .game_connection.ServerCache_AramyGroup.Group group = 1;
  inline int group_size() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 1;
  inline const ::game_connection::ServerCache_AramyGroup_Group& group(int index) const;
  inline ::game_connection::ServerCache_AramyGroup_Group* mutable_group(int index);
  inline ::game_connection::ServerCache_AramyGroup_Group* add_group();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_AramyGroup_Group >&
      group() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_AramyGroup_Group >*
      mutable_group();
  
  // @@protoc_insertion_point(class_scope:game_connection.ServerCache_AramyGroup)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_AramyGroup_Group > group_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ServerCache_5fArmyGroup_2eproto();
  friend void protobuf_AssignDesc_ServerCache_5fArmyGroup_2eproto();
  friend void protobuf_ShutdownFile_ServerCache_5fArmyGroup_2eproto();
  
  void InitAsDefaultInstance();
  static ServerCache_AramyGroup* default_instance_;
};
// ===================================================================


// ===================================================================

// ServerCache_AramyGroup_Group

// required int32 chief_id = 1;
inline bool ServerCache_AramyGroup_Group::has_chief_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerCache_AramyGroup_Group::set_has_chief_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerCache_AramyGroup_Group::clear_has_chief_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerCache_AramyGroup_Group::clear_chief_id() {
  chief_id_ = 0;
  clear_has_chief_id();
}
inline ::google::protobuf::int32 ServerCache_AramyGroup_Group::chief_id() const {
  return chief_id_;
}
inline void ServerCache_AramyGroup_Group::set_chief_id(::google::protobuf::int32 value) {
  set_has_chief_id();
  chief_id_ = value;
}

// required bytes name = 2;
inline bool ServerCache_AramyGroup_Group::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerCache_AramyGroup_Group::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerCache_AramyGroup_Group::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerCache_AramyGroup_Group::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ServerCache_AramyGroup_Group::name() const {
  return *name_;
}
inline void ServerCache_AramyGroup_Group::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ServerCache_AramyGroup_Group::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ServerCache_AramyGroup_Group::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServerCache_AramyGroup_Group::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ServerCache_AramyGroup_Group::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 id = 3;
inline bool ServerCache_AramyGroup_Group::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerCache_AramyGroup_Group::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerCache_AramyGroup_Group::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerCache_AramyGroup_Group::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ServerCache_AramyGroup_Group::id() const {
  return id_;
}
inline void ServerCache_AramyGroup_Group::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated int32 player = 4;
inline int ServerCache_AramyGroup_Group::player_size() const {
  return player_.size();
}
inline void ServerCache_AramyGroup_Group::clear_player() {
  player_.Clear();
}
inline ::google::protobuf::int32 ServerCache_AramyGroup_Group::player(int index) const {
  return player_.Get(index);
}
inline void ServerCache_AramyGroup_Group::set_player(int index, ::google::protobuf::int32 value) {
  player_.Set(index, value);
}
inline void ServerCache_AramyGroup_Group::add_player(::google::protobuf::int32 value) {
  player_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ServerCache_AramyGroup_Group::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ServerCache_AramyGroup_Group::mutable_player() {
  return &player_;
}

// -------------------------------------------------------------------

// ServerCache_AramyGroup

// repeated .game_connection.ServerCache_AramyGroup.Group group = 1;
inline int ServerCache_AramyGroup::group_size() const {
  return group_.size();
}
inline void ServerCache_AramyGroup::clear_group() {
  group_.Clear();
}
inline const ::game_connection::ServerCache_AramyGroup_Group& ServerCache_AramyGroup::group(int index) const {
  return group_.Get(index);
}
inline ::game_connection::ServerCache_AramyGroup_Group* ServerCache_AramyGroup::mutable_group(int index) {
  return group_.Mutable(index);
}
inline ::game_connection::ServerCache_AramyGroup_Group* ServerCache_AramyGroup::add_group() {
  return group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_AramyGroup_Group >&
ServerCache_AramyGroup::group() const {
  return group_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::ServerCache_AramyGroup_Group >*
ServerCache_AramyGroup::mutable_group() {
  return &group_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerCache_5fArmyGroup_2eproto__INCLUDED
