// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnityHallEvent.proto

#ifndef PROTOBUF_UnityHallEvent_2eproto__INCLUDED
#define PROTOBUF_UnityHallEvent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UnityHallEvent_2eproto();
void protobuf_AssignDesc_UnityHallEvent_2eproto();
void protobuf_ShutdownFile_UnityHallEvent_2eproto();

class UnityHallEvent;

enum UnityHallEvent_traits {
  UnityHallEvent_traits_value = 3521
};
bool UnityHallEvent_traits_IsValid(int value);
const UnityHallEvent_traits UnityHallEvent_traits_traits_MIN = UnityHallEvent_traits_value;
const UnityHallEvent_traits UnityHallEvent_traits_traits_MAX = UnityHallEvent_traits_value;
const int UnityHallEvent_traits_traits_ARRAYSIZE = UnityHallEvent_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnityHallEvent_traits_descriptor();
inline const ::std::string& UnityHallEvent_traits_Name(UnityHallEvent_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnityHallEvent_traits_descriptor(), value);
}
inline bool UnityHallEvent_traits_Parse(
    const ::std::string& name, UnityHallEvent_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnityHallEvent_traits>(
    UnityHallEvent_traits_descriptor(), name, value);
}
enum UnityHallEvent_SyncType {
  UnityHallEvent_SyncType_POSITION = 5,
  UnityHallEvent_SyncType_AVATAR = 1,
  UnityHallEvent_SyncType_ACTION = 2,
  UnityHallEvent_SyncType_EXPRESSION = 3,
  UnityHallEvent_SyncType_SPECIAL = 4,
  UnityHallEvent_SyncType_RECHARGING = 6,
  UnityHallEvent_SyncType_UNRECHARGING = 7
};
bool UnityHallEvent_SyncType_IsValid(int value);
const UnityHallEvent_SyncType UnityHallEvent_SyncType_SyncType_MIN = UnityHallEvent_SyncType_AVATAR;
const UnityHallEvent_SyncType UnityHallEvent_SyncType_SyncType_MAX = UnityHallEvent_SyncType_UNRECHARGING;
const int UnityHallEvent_SyncType_SyncType_ARRAYSIZE = UnityHallEvent_SyncType_SyncType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnityHallEvent_SyncType_descriptor();
inline const ::std::string& UnityHallEvent_SyncType_Name(UnityHallEvent_SyncType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnityHallEvent_SyncType_descriptor(), value);
}
inline bool UnityHallEvent_SyncType_Parse(
    const ::std::string& name, UnityHallEvent_SyncType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnityHallEvent_SyncType>(
    UnityHallEvent_SyncType_descriptor(), name, value);
}
// ===================================================================

class UnityHallEvent : public ::google::protobuf::Message {
 public:
  UnityHallEvent();
  virtual ~UnityHallEvent();
  
  UnityHallEvent(const UnityHallEvent& from);
  
  inline UnityHallEvent& operator=(const UnityHallEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnityHallEvent& default_instance();
  
  void Swap(UnityHallEvent* other);
  
  // implements Message ----------------------------------------------
  
  UnityHallEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnityHallEvent& from);
  void MergeFrom(const UnityHallEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef UnityHallEvent_traits traits;
  static const traits value = UnityHallEvent_traits_value;
  static inline bool traits_IsValid(int value) {
    return UnityHallEvent_traits_IsValid(value);
  }
  static const traits traits_MIN =
    UnityHallEvent_traits_traits_MIN;
  static const traits traits_MAX =
    UnityHallEvent_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    UnityHallEvent_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return UnityHallEvent_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return UnityHallEvent_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return UnityHallEvent_traits_Parse(name, value);
  }
  
  typedef UnityHallEvent_SyncType SyncType;
  static const SyncType POSITION = UnityHallEvent_SyncType_POSITION;
  static const SyncType AVATAR = UnityHallEvent_SyncType_AVATAR;
  static const SyncType ACTION = UnityHallEvent_SyncType_ACTION;
  static const SyncType EXPRESSION = UnityHallEvent_SyncType_EXPRESSION;
  static const SyncType SPECIAL = UnityHallEvent_SyncType_SPECIAL;
  static const SyncType RECHARGING = UnityHallEvent_SyncType_RECHARGING;
  static const SyncType UNRECHARGING = UnityHallEvent_SyncType_UNRECHARGING;
  static inline bool SyncType_IsValid(int value) {
    return UnityHallEvent_SyncType_IsValid(value);
  }
  static const SyncType SyncType_MIN =
    UnityHallEvent_SyncType_SyncType_MIN;
  static const SyncType SyncType_MAX =
    UnityHallEvent_SyncType_SyncType_MAX;
  static const int SyncType_ARRAYSIZE =
    UnityHallEvent_SyncType_SyncType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SyncType_descriptor() {
    return UnityHallEvent_SyncType_descriptor();
  }
  static inline const ::std::string& SyncType_Name(SyncType value) {
    return UnityHallEvent_SyncType_Name(value);
  }
  static inline bool SyncType_Parse(const ::std::string& name,
      SyncType* value) {
    return UnityHallEvent_SyncType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional .game_connection.UnityHallEvent.SyncType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::game_connection::UnityHallEvent_SyncType type() const;
  inline void set_type(::game_connection::UnityHallEvent_SyncType value);
  
  // optional sint32 dummy = 3;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 3;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);
  
  // optional sint32 dummy2 = 4;
  inline bool has_dummy2() const;
  inline void clear_dummy2();
  static const int kDummy2FieldNumber = 4;
  inline ::google::protobuf::int32 dummy2() const;
  inline void set_dummy2(::google::protobuf::int32 value);
  
  // optional sint32 dummy3 = 5;
  inline bool has_dummy3() const;
  inline void clear_dummy3();
  static const int kDummy3FieldNumber = 5;
  inline ::google::protobuf::int32 dummy3() const;
  inline void set_dummy3(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.UnityHallEvent)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_dummy();
  inline void clear_has_dummy();
  inline void set_has_dummy2();
  inline void clear_has_dummy2();
  inline void set_has_dummy3();
  inline void clear_has_dummy3();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  int type_;
  ::google::protobuf::int32 dummy_;
  ::google::protobuf::int32 dummy2_;
  ::google::protobuf::int32 dummy3_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_UnityHallEvent_2eproto();
  friend void protobuf_AssignDesc_UnityHallEvent_2eproto();
  friend void protobuf_ShutdownFile_UnityHallEvent_2eproto();
  
  void InitAsDefaultInstance();
  static UnityHallEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// UnityHallEvent

// required int32 id = 1;
inline bool UnityHallEvent::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnityHallEvent::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnityHallEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnityHallEvent::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 UnityHallEvent::id() const {
  return id_;
}
inline void UnityHallEvent::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional .game_connection.UnityHallEvent.SyncType type = 2;
inline bool UnityHallEvent::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnityHallEvent::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnityHallEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnityHallEvent::clear_type() {
  type_ = 5;
  clear_has_type();
}
inline ::game_connection::UnityHallEvent_SyncType UnityHallEvent::type() const {
  return static_cast< ::game_connection::UnityHallEvent_SyncType >(type_);
}
inline void UnityHallEvent::set_type(::game_connection::UnityHallEvent_SyncType value) {
  GOOGLE_DCHECK(::game_connection::UnityHallEvent_SyncType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional sint32 dummy = 3;
inline bool UnityHallEvent::has_dummy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnityHallEvent::set_has_dummy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnityHallEvent::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnityHallEvent::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 UnityHallEvent::dummy() const {
  return dummy_;
}
inline void UnityHallEvent::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// optional sint32 dummy2 = 4;
inline bool UnityHallEvent::has_dummy2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnityHallEvent::set_has_dummy2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnityHallEvent::clear_has_dummy2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnityHallEvent::clear_dummy2() {
  dummy2_ = 0;
  clear_has_dummy2();
}
inline ::google::protobuf::int32 UnityHallEvent::dummy2() const {
  return dummy2_;
}
inline void UnityHallEvent::set_dummy2(::google::protobuf::int32 value) {
  set_has_dummy2();
  dummy2_ = value;
}

// optional sint32 dummy3 = 5;
inline bool UnityHallEvent::has_dummy3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnityHallEvent::set_has_dummy3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnityHallEvent::clear_has_dummy3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnityHallEvent::clear_dummy3() {
  dummy3_ = 0;
  clear_has_dummy3();
}
inline ::google::protobuf::int32 UnityHallEvent::dummy3() const {
  return dummy3_;
}
inline void UnityHallEvent::set_dummy3(::google::protobuf::int32 value) {
  set_has_dummy3();
  dummy3_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::UnityHallEvent_traits>() {
  return ::game_connection::UnityHallEvent_traits_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::UnityHallEvent_SyncType>() {
  return ::game_connection::UnityHallEvent_SyncType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UnityHallEvent_2eproto__INCLUDED
