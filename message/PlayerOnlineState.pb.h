// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerOnlineState.proto

#ifndef PROTOBUF_PlayerOnlineState_2eproto__INCLUDED
#define PROTOBUF_PlayerOnlineState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PlayerOnlineState_2eproto();
void protobuf_AssignDesc_PlayerOnlineState_2eproto();
void protobuf_ShutdownFile_PlayerOnlineState_2eproto();

class PlayerOnlineState;

enum PlayerOnlineState_traits {
  PlayerOnlineState_traits_value = 3219
};
bool PlayerOnlineState_traits_IsValid(int value);
const PlayerOnlineState_traits PlayerOnlineState_traits_traits_MIN = PlayerOnlineState_traits_value;
const PlayerOnlineState_traits PlayerOnlineState_traits_traits_MAX = PlayerOnlineState_traits_value;
const int PlayerOnlineState_traits_traits_ARRAYSIZE = PlayerOnlineState_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerOnlineState_traits_descriptor();
inline const ::std::string& PlayerOnlineState_traits_Name(PlayerOnlineState_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerOnlineState_traits_descriptor(), value);
}
inline bool PlayerOnlineState_traits_Parse(
    const ::std::string& name, PlayerOnlineState_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerOnlineState_traits>(
    PlayerOnlineState_traits_descriptor(), name, value);
}
// ===================================================================

class PlayerOnlineState : public ::google::protobuf::Message {
 public:
  PlayerOnlineState();
  virtual ~PlayerOnlineState();
  
  PlayerOnlineState(const PlayerOnlineState& from);
  
  inline PlayerOnlineState& operator=(const PlayerOnlineState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerOnlineState& default_instance();
  
  void Swap(PlayerOnlineState* other);
  
  // implements Message ----------------------------------------------
  
  PlayerOnlineState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerOnlineState& from);
  void MergeFrom(const PlayerOnlineState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PlayerOnlineState_traits traits;
  static const traits value = PlayerOnlineState_traits_value;
  static inline bool traits_IsValid(int value) {
    return PlayerOnlineState_traits_IsValid(value);
  }
  static const traits traits_MIN =
    PlayerOnlineState_traits_traits_MIN;
  static const traits traits_MAX =
    PlayerOnlineState_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    PlayerOnlineState_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return PlayerOnlineState_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return PlayerOnlineState_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return PlayerOnlineState_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated int32 online_player = 1;
  inline int online_player_size() const;
  inline void clear_online_player();
  static const int kOnlinePlayerFieldNumber = 1;
  inline ::google::protobuf::int32 online_player(int index) const;
  inline void set_online_player(int index, ::google::protobuf::int32 value);
  inline void add_online_player(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      online_player() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_online_player();
  
  // repeated int32 offline_player = 2;
  inline int offline_player_size() const;
  inline void clear_offline_player();
  static const int kOfflinePlayerFieldNumber = 2;
  inline ::google::protobuf::int32 offline_player(int index) const;
  inline void set_offline_player(int index, ::google::protobuf::int32 value);
  inline void add_offline_player(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      offline_player() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_offline_player();
  
  // optional int32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::int32 session_id() const;
  inline void set_session_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.PlayerOnlineState)
 private:
  inline void set_has_session_id();
  inline void clear_has_session_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > online_player_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > offline_player_;
  ::google::protobuf::int32 session_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerOnlineState_2eproto();
  friend void protobuf_AssignDesc_PlayerOnlineState_2eproto();
  friend void protobuf_ShutdownFile_PlayerOnlineState_2eproto();
  
  void InitAsDefaultInstance();
  static PlayerOnlineState* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerOnlineState

// repeated int32 online_player = 1;
inline int PlayerOnlineState::online_player_size() const {
  return online_player_.size();
}
inline void PlayerOnlineState::clear_online_player() {
  online_player_.Clear();
}
inline ::google::protobuf::int32 PlayerOnlineState::online_player(int index) const {
  return online_player_.Get(index);
}
inline void PlayerOnlineState::set_online_player(int index, ::google::protobuf::int32 value) {
  online_player_.Set(index, value);
}
inline void PlayerOnlineState::add_online_player(::google::protobuf::int32 value) {
  online_player_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerOnlineState::online_player() const {
  return online_player_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerOnlineState::mutable_online_player() {
  return &online_player_;
}

// repeated int32 offline_player = 2;
inline int PlayerOnlineState::offline_player_size() const {
  return offline_player_.size();
}
inline void PlayerOnlineState::clear_offline_player() {
  offline_player_.Clear();
}
inline ::google::protobuf::int32 PlayerOnlineState::offline_player(int index) const {
  return offline_player_.Get(index);
}
inline void PlayerOnlineState::set_offline_player(int index, ::google::protobuf::int32 value) {
  offline_player_.Set(index, value);
}
inline void PlayerOnlineState::add_offline_player(::google::protobuf::int32 value) {
  offline_player_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerOnlineState::offline_player() const {
  return offline_player_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerOnlineState::mutable_offline_player() {
  return &offline_player_;
}

// optional int32 session_id = 3;
inline bool PlayerOnlineState::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerOnlineState::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerOnlineState::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerOnlineState::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 PlayerOnlineState::session_id() const {
  return session_id_;
}
inline void PlayerOnlineState::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::PlayerOnlineState_traits>() {
  return ::game_connection::PlayerOnlineState_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerOnlineState_2eproto__INCLUDED
