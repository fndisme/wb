// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataQuery_BaseExperience.proto

#ifndef PROTOBUF_DataQuery_5fBaseExperience_2eproto__INCLUDED
#define PROTOBUF_DataQuery_5fBaseExperience_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DataQuery_5fBaseExperience_2eproto();
void protobuf_AssignDesc_DataQuery_5fBaseExperience_2eproto();
void protobuf_ShutdownFile_DataQuery_5fBaseExperience_2eproto();

class DataQuery_BaseExperience;
class DataQuery_BaseExperience_Exp;

enum DataQuery_BaseExperience_traits {
  DataQuery_BaseExperience_traits_value = 7732
};
bool DataQuery_BaseExperience_traits_IsValid(int value);
const DataQuery_BaseExperience_traits DataQuery_BaseExperience_traits_traits_MIN = DataQuery_BaseExperience_traits_value;
const DataQuery_BaseExperience_traits DataQuery_BaseExperience_traits_traits_MAX = DataQuery_BaseExperience_traits_value;
const int DataQuery_BaseExperience_traits_traits_ARRAYSIZE = DataQuery_BaseExperience_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataQuery_BaseExperience_traits_descriptor();
inline const ::std::string& DataQuery_BaseExperience_traits_Name(DataQuery_BaseExperience_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataQuery_BaseExperience_traits_descriptor(), value);
}
inline bool DataQuery_BaseExperience_traits_Parse(
    const ::std::string& name, DataQuery_BaseExperience_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataQuery_BaseExperience_traits>(
    DataQuery_BaseExperience_traits_descriptor(), name, value);
}
// ===================================================================

class DataQuery_BaseExperience_Exp : public ::google::protobuf::Message {
 public:
  DataQuery_BaseExperience_Exp();
  virtual ~DataQuery_BaseExperience_Exp();
  
  DataQuery_BaseExperience_Exp(const DataQuery_BaseExperience_Exp& from);
  
  inline DataQuery_BaseExperience_Exp& operator=(const DataQuery_BaseExperience_Exp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataQuery_BaseExperience_Exp& default_instance();
  
  void Swap(DataQuery_BaseExperience_Exp* other);
  
  // implements Message ----------------------------------------------
  
  DataQuery_BaseExperience_Exp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataQuery_BaseExperience_Exp& from);
  void MergeFrom(const DataQuery_BaseExperience_Exp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required uint64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // required uint64 coin = 3;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 3;
  inline ::google::protobuf::uint64 coin() const;
  inline void set_coin(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.DataQuery_BaseExperience.Exp)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_coin();
  inline void clear_has_coin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint64 coin_;
  ::google::protobuf::int32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_DataQuery_5fBaseExperience_2eproto();
  friend void protobuf_AssignDesc_DataQuery_5fBaseExperience_2eproto();
  friend void protobuf_ShutdownFile_DataQuery_5fBaseExperience_2eproto();
  
  void InitAsDefaultInstance();
  static DataQuery_BaseExperience_Exp* default_instance_;
};
// -------------------------------------------------------------------

class DataQuery_BaseExperience : public ::google::protobuf::Message {
 public:
  DataQuery_BaseExperience();
  virtual ~DataQuery_BaseExperience();
  
  DataQuery_BaseExperience(const DataQuery_BaseExperience& from);
  
  inline DataQuery_BaseExperience& operator=(const DataQuery_BaseExperience& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataQuery_BaseExperience& default_instance();
  
  void Swap(DataQuery_BaseExperience* other);
  
  // implements Message ----------------------------------------------
  
  DataQuery_BaseExperience* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataQuery_BaseExperience& from);
  void MergeFrom(const DataQuery_BaseExperience& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef DataQuery_BaseExperience_Exp Exp;
  
  typedef DataQuery_BaseExperience_traits traits;
  static const traits value = DataQuery_BaseExperience_traits_value;
  static inline bool traits_IsValid(int value) {
    return DataQuery_BaseExperience_traits_IsValid(value);
  }
  static const traits traits_MIN =
    DataQuery_BaseExperience_traits_traits_MIN;
  static const traits traits_MAX =
    DataQuery_BaseExperience_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    DataQuery_BaseExperience_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return DataQuery_BaseExperience_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return DataQuery_BaseExperience_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return DataQuery_BaseExperience_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .game_connection.DataQuery_BaseExperience.Exp info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::game_connection::DataQuery_BaseExperience_Exp& info(int index) const;
  inline ::game_connection::DataQuery_BaseExperience_Exp* mutable_info(int index);
  inline ::game_connection::DataQuery_BaseExperience_Exp* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_BaseExperience_Exp >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_BaseExperience_Exp >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:game_connection.DataQuery_BaseExperience)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_BaseExperience_Exp > info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_DataQuery_5fBaseExperience_2eproto();
  friend void protobuf_AssignDesc_DataQuery_5fBaseExperience_2eproto();
  friend void protobuf_ShutdownFile_DataQuery_5fBaseExperience_2eproto();
  
  void InitAsDefaultInstance();
  static DataQuery_BaseExperience* default_instance_;
};
// ===================================================================


// ===================================================================

// DataQuery_BaseExperience_Exp

// required int32 level = 1;
inline bool DataQuery_BaseExperience_Exp::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataQuery_BaseExperience_Exp::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataQuery_BaseExperience_Exp::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataQuery_BaseExperience_Exp::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 DataQuery_BaseExperience_Exp::level() const {
  return level_;
}
inline void DataQuery_BaseExperience_Exp::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required uint64 exp = 2;
inline bool DataQuery_BaseExperience_Exp::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataQuery_BaseExperience_Exp::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataQuery_BaseExperience_Exp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataQuery_BaseExperience_Exp::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 DataQuery_BaseExperience_Exp::exp() const {
  return exp_;
}
inline void DataQuery_BaseExperience_Exp::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// required uint64 coin = 3;
inline bool DataQuery_BaseExperience_Exp::has_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataQuery_BaseExperience_Exp::set_has_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataQuery_BaseExperience_Exp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataQuery_BaseExperience_Exp::clear_coin() {
  coin_ = GOOGLE_ULONGLONG(0);
  clear_has_coin();
}
inline ::google::protobuf::uint64 DataQuery_BaseExperience_Exp::coin() const {
  return coin_;
}
inline void DataQuery_BaseExperience_Exp::set_coin(::google::protobuf::uint64 value) {
  set_has_coin();
  coin_ = value;
}

// -------------------------------------------------------------------

// DataQuery_BaseExperience

// repeated .game_connection.DataQuery_BaseExperience.Exp info = 1;
inline int DataQuery_BaseExperience::info_size() const {
  return info_.size();
}
inline void DataQuery_BaseExperience::clear_info() {
  info_.Clear();
}
inline const ::game_connection::DataQuery_BaseExperience_Exp& DataQuery_BaseExperience::info(int index) const {
  return info_.Get(index);
}
inline ::game_connection::DataQuery_BaseExperience_Exp* DataQuery_BaseExperience::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::game_connection::DataQuery_BaseExperience_Exp* DataQuery_BaseExperience::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_BaseExperience_Exp >&
DataQuery_BaseExperience::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_BaseExperience_Exp >*
DataQuery_BaseExperience::mutable_info() {
  return &info_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::DataQuery_BaseExperience_traits>() {
  return ::game_connection::DataQuery_BaseExperience_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DataQuery_5fBaseExperience_2eproto__INCLUDED
