// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Super_PlayerNumberState.proto

#ifndef PROTOBUF_Super_5fPlayerNumberState_2eproto__INCLUDED
#define PROTOBUF_Super_5fPlayerNumberState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Super_5fPlayerNumberState_2eproto();
void protobuf_AssignDesc_Super_5fPlayerNumberState_2eproto();
void protobuf_ShutdownFile_Super_5fPlayerNumberState_2eproto();

class Super_PlayerNumberState;
class Super_PlayerNumberState_OnlineState;
class Super_PlayerNumberState_NewPlayerState;

enum Super_PlayerNumberState_traits {
  Super_PlayerNumberState_traits_value = 10034
};
bool Super_PlayerNumberState_traits_IsValid(int value);
const Super_PlayerNumberState_traits Super_PlayerNumberState_traits_traits_MIN = Super_PlayerNumberState_traits_value;
const Super_PlayerNumberState_traits Super_PlayerNumberState_traits_traits_MAX = Super_PlayerNumberState_traits_value;
const int Super_PlayerNumberState_traits_traits_ARRAYSIZE = Super_PlayerNumberState_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* Super_PlayerNumberState_traits_descriptor();
inline const ::std::string& Super_PlayerNumberState_traits_Name(Super_PlayerNumberState_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    Super_PlayerNumberState_traits_descriptor(), value);
}
inline bool Super_PlayerNumberState_traits_Parse(
    const ::std::string& name, Super_PlayerNumberState_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Super_PlayerNumberState_traits>(
    Super_PlayerNumberState_traits_descriptor(), name, value);
}
enum Super_PlayerNumberState_Flags {
  Super_PlayerNumberState_Flags_TEN_MINUTE = 10,
  Super_PlayerNumberState_Flags_HALF_HOUR = 30,
  Super_PlayerNumberState_Flags_HOUR = 60,
  Super_PlayerNumberState_Flags_ONE_DAY = 1440
};
bool Super_PlayerNumberState_Flags_IsValid(int value);
const Super_PlayerNumberState_Flags Super_PlayerNumberState_Flags_Flags_MIN = Super_PlayerNumberState_Flags_TEN_MINUTE;
const Super_PlayerNumberState_Flags Super_PlayerNumberState_Flags_Flags_MAX = Super_PlayerNumberState_Flags_ONE_DAY;
const int Super_PlayerNumberState_Flags_Flags_ARRAYSIZE = Super_PlayerNumberState_Flags_Flags_MAX + 1;

const ::google::protobuf::EnumDescriptor* Super_PlayerNumberState_Flags_descriptor();
inline const ::std::string& Super_PlayerNumberState_Flags_Name(Super_PlayerNumberState_Flags value) {
  return ::google::protobuf::internal::NameOfEnum(
    Super_PlayerNumberState_Flags_descriptor(), value);
}
inline bool Super_PlayerNumberState_Flags_Parse(
    const ::std::string& name, Super_PlayerNumberState_Flags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Super_PlayerNumberState_Flags>(
    Super_PlayerNumberState_Flags_descriptor(), name, value);
}
// ===================================================================

class Super_PlayerNumberState_OnlineState : public ::google::protobuf::Message {
 public:
  Super_PlayerNumberState_OnlineState();
  virtual ~Super_PlayerNumberState_OnlineState();
  
  Super_PlayerNumberState_OnlineState(const Super_PlayerNumberState_OnlineState& from);
  
  inline Super_PlayerNumberState_OnlineState& operator=(const Super_PlayerNumberState_OnlineState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Super_PlayerNumberState_OnlineState& default_instance();
  
  void Swap(Super_PlayerNumberState_OnlineState* other);
  
  // implements Message ----------------------------------------------
  
  Super_PlayerNumberState_OnlineState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Super_PlayerNumberState_OnlineState& from);
  void MergeFrom(const Super_PlayerNumberState_OnlineState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .game_connection.Super_PlayerNumberState.Flags flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::game_connection::Super_PlayerNumberState_Flags flag() const;
  inline void set_flag(::game_connection::Super_PlayerNumberState_Flags value);
  
  // required float count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline float count() const;
  inline void set_count(float value);
  
  // optional int32 min_online = 3;
  inline bool has_min_online() const;
  inline void clear_min_online();
  static const int kMinOnlineFieldNumber = 3;
  inline ::google::protobuf::int32 min_online() const;
  inline void set_min_online(::google::protobuf::int32 value);
  
  // optional int32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::int32 max_online() const;
  inline void set_max_online(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.Super_PlayerNumberState.OnlineState)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_min_online();
  inline void clear_has_min_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int flag_;
  float count_;
  ::google::protobuf::int32 min_online_;
  ::google::protobuf::int32 max_online_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Super_5fPlayerNumberState_2eproto();
  friend void protobuf_AssignDesc_Super_5fPlayerNumberState_2eproto();
  friend void protobuf_ShutdownFile_Super_5fPlayerNumberState_2eproto();
  
  void InitAsDefaultInstance();
  static Super_PlayerNumberState_OnlineState* default_instance_;
};
// -------------------------------------------------------------------

class Super_PlayerNumberState_NewPlayerState : public ::google::protobuf::Message {
 public:
  Super_PlayerNumberState_NewPlayerState();
  virtual ~Super_PlayerNumberState_NewPlayerState();
  
  Super_PlayerNumberState_NewPlayerState(const Super_PlayerNumberState_NewPlayerState& from);
  
  inline Super_PlayerNumberState_NewPlayerState& operator=(const Super_PlayerNumberState_NewPlayerState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Super_PlayerNumberState_NewPlayerState& default_instance();
  
  void Swap(Super_PlayerNumberState_NewPlayerState* other);
  
  // implements Message ----------------------------------------------
  
  Super_PlayerNumberState_NewPlayerState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Super_PlayerNumberState_NewPlayerState& from);
  void MergeFrom(const Super_PlayerNumberState_NewPlayerState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .game_connection.Super_PlayerNumberState.Flags flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::game_connection::Super_PlayerNumberState_Flags flag() const;
  inline void set_flag(::game_connection::Super_PlayerNumberState_Flags value);
  
  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.Super_PlayerNumberState.NewPlayerState)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int flag_;
  ::google::protobuf::int32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Super_5fPlayerNumberState_2eproto();
  friend void protobuf_AssignDesc_Super_5fPlayerNumberState_2eproto();
  friend void protobuf_ShutdownFile_Super_5fPlayerNumberState_2eproto();
  
  void InitAsDefaultInstance();
  static Super_PlayerNumberState_NewPlayerState* default_instance_;
};
// -------------------------------------------------------------------

class Super_PlayerNumberState : public ::google::protobuf::Message {
 public:
  Super_PlayerNumberState();
  virtual ~Super_PlayerNumberState();
  
  Super_PlayerNumberState(const Super_PlayerNumberState& from);
  
  inline Super_PlayerNumberState& operator=(const Super_PlayerNumberState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Super_PlayerNumberState& default_instance();
  
  void Swap(Super_PlayerNumberState* other);
  
  // implements Message ----------------------------------------------
  
  Super_PlayerNumberState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Super_PlayerNumberState& from);
  void MergeFrom(const Super_PlayerNumberState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Super_PlayerNumberState_OnlineState OnlineState;
  typedef Super_PlayerNumberState_NewPlayerState NewPlayerState;
  
  typedef Super_PlayerNumberState_traits traits;
  static const traits value = Super_PlayerNumberState_traits_value;
  static inline bool traits_IsValid(int value) {
    return Super_PlayerNumberState_traits_IsValid(value);
  }
  static const traits traits_MIN =
    Super_PlayerNumberState_traits_traits_MIN;
  static const traits traits_MAX =
    Super_PlayerNumberState_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    Super_PlayerNumberState_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return Super_PlayerNumberState_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return Super_PlayerNumberState_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return Super_PlayerNumberState_traits_Parse(name, value);
  }
  
  typedef Super_PlayerNumberState_Flags Flags;
  static const Flags TEN_MINUTE = Super_PlayerNumberState_Flags_TEN_MINUTE;
  static const Flags HALF_HOUR = Super_PlayerNumberState_Flags_HALF_HOUR;
  static const Flags HOUR = Super_PlayerNumberState_Flags_HOUR;
  static const Flags ONE_DAY = Super_PlayerNumberState_Flags_ONE_DAY;
  static inline bool Flags_IsValid(int value) {
    return Super_PlayerNumberState_Flags_IsValid(value);
  }
  static const Flags Flags_MIN =
    Super_PlayerNumberState_Flags_Flags_MIN;
  static const Flags Flags_MAX =
    Super_PlayerNumberState_Flags_Flags_MAX;
  static const int Flags_ARRAYSIZE =
    Super_PlayerNumberState_Flags_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Flags_descriptor() {
    return Super_PlayerNumberState_Flags_descriptor();
  }
  static inline const ::std::string& Flags_Name(Flags value) {
    return Super_PlayerNumberState_Flags_Name(value);
  }
  static inline bool Flags_Parse(const ::std::string& name,
      Flags* value) {
    return Super_PlayerNumberState_Flags_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .game_connection.Super_PlayerNumberState.OnlineState online = 1;
  inline int online_size() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 1;
  inline const ::game_connection::Super_PlayerNumberState_OnlineState& online(int index) const;
  inline ::game_connection::Super_PlayerNumberState_OnlineState* mutable_online(int index);
  inline ::game_connection::Super_PlayerNumberState_OnlineState* add_online();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_OnlineState >&
      online() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_OnlineState >*
      mutable_online();
  
  // repeated .game_connection.Super_PlayerNumberState.NewPlayerState new_player = 2;
  inline int new_player_size() const;
  inline void clear_new_player();
  static const int kNewPlayerFieldNumber = 2;
  inline const ::game_connection::Super_PlayerNumberState_NewPlayerState& new_player(int index) const;
  inline ::game_connection::Super_PlayerNumberState_NewPlayerState* mutable_new_player(int index);
  inline ::game_connection::Super_PlayerNumberState_NewPlayerState* add_new_player();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_NewPlayerState >&
      new_player() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_NewPlayerState >*
      mutable_new_player();
  
  // @@protoc_insertion_point(class_scope:game_connection.Super_PlayerNumberState)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_OnlineState > online_;
  ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_NewPlayerState > new_player_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Super_5fPlayerNumberState_2eproto();
  friend void protobuf_AssignDesc_Super_5fPlayerNumberState_2eproto();
  friend void protobuf_ShutdownFile_Super_5fPlayerNumberState_2eproto();
  
  void InitAsDefaultInstance();
  static Super_PlayerNumberState* default_instance_;
};
// ===================================================================


// ===================================================================

// Super_PlayerNumberState_OnlineState

// required .game_connection.Super_PlayerNumberState.Flags flag = 1;
inline bool Super_PlayerNumberState_OnlineState::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Super_PlayerNumberState_OnlineState::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Super_PlayerNumberState_OnlineState::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Super_PlayerNumberState_OnlineState::clear_flag() {
  flag_ = 10;
  clear_has_flag();
}
inline ::game_connection::Super_PlayerNumberState_Flags Super_PlayerNumberState_OnlineState::flag() const {
  return static_cast< ::game_connection::Super_PlayerNumberState_Flags >(flag_);
}
inline void Super_PlayerNumberState_OnlineState::set_flag(::game_connection::Super_PlayerNumberState_Flags value) {
  GOOGLE_DCHECK(::game_connection::Super_PlayerNumberState_Flags_IsValid(value));
  set_has_flag();
  flag_ = value;
}

// required float count = 2;
inline bool Super_PlayerNumberState_OnlineState::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Super_PlayerNumberState_OnlineState::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Super_PlayerNumberState_OnlineState::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Super_PlayerNumberState_OnlineState::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline float Super_PlayerNumberState_OnlineState::count() const {
  return count_;
}
inline void Super_PlayerNumberState_OnlineState::set_count(float value) {
  set_has_count();
  count_ = value;
}

// optional int32 min_online = 3;
inline bool Super_PlayerNumberState_OnlineState::has_min_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Super_PlayerNumberState_OnlineState::set_has_min_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Super_PlayerNumberState_OnlineState::clear_has_min_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Super_PlayerNumberState_OnlineState::clear_min_online() {
  min_online_ = 0;
  clear_has_min_online();
}
inline ::google::protobuf::int32 Super_PlayerNumberState_OnlineState::min_online() const {
  return min_online_;
}
inline void Super_PlayerNumberState_OnlineState::set_min_online(::google::protobuf::int32 value) {
  set_has_min_online();
  min_online_ = value;
}

// optional int32 max_online = 4;
inline bool Super_PlayerNumberState_OnlineState::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Super_PlayerNumberState_OnlineState::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Super_PlayerNumberState_OnlineState::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Super_PlayerNumberState_OnlineState::clear_max_online() {
  max_online_ = 0;
  clear_has_max_online();
}
inline ::google::protobuf::int32 Super_PlayerNumberState_OnlineState::max_online() const {
  return max_online_;
}
inline void Super_PlayerNumberState_OnlineState::set_max_online(::google::protobuf::int32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// Super_PlayerNumberState_NewPlayerState

// required .game_connection.Super_PlayerNumberState.Flags flag = 1;
inline bool Super_PlayerNumberState_NewPlayerState::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Super_PlayerNumberState_NewPlayerState::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Super_PlayerNumberState_NewPlayerState::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Super_PlayerNumberState_NewPlayerState::clear_flag() {
  flag_ = 10;
  clear_has_flag();
}
inline ::game_connection::Super_PlayerNumberState_Flags Super_PlayerNumberState_NewPlayerState::flag() const {
  return static_cast< ::game_connection::Super_PlayerNumberState_Flags >(flag_);
}
inline void Super_PlayerNumberState_NewPlayerState::set_flag(::game_connection::Super_PlayerNumberState_Flags value) {
  GOOGLE_DCHECK(::game_connection::Super_PlayerNumberState_Flags_IsValid(value));
  set_has_flag();
  flag_ = value;
}

// required int32 count = 2;
inline bool Super_PlayerNumberState_NewPlayerState::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Super_PlayerNumberState_NewPlayerState::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Super_PlayerNumberState_NewPlayerState::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Super_PlayerNumberState_NewPlayerState::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Super_PlayerNumberState_NewPlayerState::count() const {
  return count_;
}
inline void Super_PlayerNumberState_NewPlayerState::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// Super_PlayerNumberState

// repeated .game_connection.Super_PlayerNumberState.OnlineState online = 1;
inline int Super_PlayerNumberState::online_size() const {
  return online_.size();
}
inline void Super_PlayerNumberState::clear_online() {
  online_.Clear();
}
inline const ::game_connection::Super_PlayerNumberState_OnlineState& Super_PlayerNumberState::online(int index) const {
  return online_.Get(index);
}
inline ::game_connection::Super_PlayerNumberState_OnlineState* Super_PlayerNumberState::mutable_online(int index) {
  return online_.Mutable(index);
}
inline ::game_connection::Super_PlayerNumberState_OnlineState* Super_PlayerNumberState::add_online() {
  return online_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_OnlineState >&
Super_PlayerNumberState::online() const {
  return online_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_OnlineState >*
Super_PlayerNumberState::mutable_online() {
  return &online_;
}

// repeated .game_connection.Super_PlayerNumberState.NewPlayerState new_player = 2;
inline int Super_PlayerNumberState::new_player_size() const {
  return new_player_.size();
}
inline void Super_PlayerNumberState::clear_new_player() {
  new_player_.Clear();
}
inline const ::game_connection::Super_PlayerNumberState_NewPlayerState& Super_PlayerNumberState::new_player(int index) const {
  return new_player_.Get(index);
}
inline ::game_connection::Super_PlayerNumberState_NewPlayerState* Super_PlayerNumberState::mutable_new_player(int index) {
  return new_player_.Mutable(index);
}
inline ::game_connection::Super_PlayerNumberState_NewPlayerState* Super_PlayerNumberState::add_new_player() {
  return new_player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_NewPlayerState >&
Super_PlayerNumberState::new_player() const {
  return new_player_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::Super_PlayerNumberState_NewPlayerState >*
Super_PlayerNumberState::mutable_new_player() {
  return &new_player_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::Super_PlayerNumberState_traits>() {
  return ::game_connection::Super_PlayerNumberState_traits_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::Super_PlayerNumberState_Flags>() {
  return ::game_connection::Super_PlayerNumberState_Flags_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Super_5fPlayerNumberState_2eproto__INCLUDED
