// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CurrentDiamondState.proto

#ifndef PROTOBUF_CurrentDiamondState_2eproto__INCLUDED
#define PROTOBUF_CurrentDiamondState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CurrentDiamondState_2eproto();
void protobuf_AssignDesc_CurrentDiamondState_2eproto();
void protobuf_ShutdownFile_CurrentDiamondState_2eproto();

class CurrentDiamondState;
class CurrentDiamondState_Event;

enum CurrentDiamondState_traits {
  CurrentDiamondState_traits_value = 3871
};
bool CurrentDiamondState_traits_IsValid(int value);
const CurrentDiamondState_traits CurrentDiamondState_traits_traits_MIN = CurrentDiamondState_traits_value;
const CurrentDiamondState_traits CurrentDiamondState_traits_traits_MAX = CurrentDiamondState_traits_value;
const int CurrentDiamondState_traits_traits_ARRAYSIZE = CurrentDiamondState_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* CurrentDiamondState_traits_descriptor();
inline const ::std::string& CurrentDiamondState_traits_Name(CurrentDiamondState_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    CurrentDiamondState_traits_descriptor(), value);
}
inline bool CurrentDiamondState_traits_Parse(
    const ::std::string& name, CurrentDiamondState_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CurrentDiamondState_traits>(
    CurrentDiamondState_traits_descriptor(), name, value);
}
// ===================================================================

class CurrentDiamondState_Event : public ::google::protobuf::Message {
 public:
  CurrentDiamondState_Event();
  virtual ~CurrentDiamondState_Event();
  
  CurrentDiamondState_Event(const CurrentDiamondState_Event& from);
  
  inline CurrentDiamondState_Event& operator=(const CurrentDiamondState_Event& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CurrentDiamondState_Event& default_instance();
  
  void Swap(CurrentDiamondState_Event* other);
  
  // implements Message ----------------------------------------------
  
  CurrentDiamondState_Event* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurrentDiamondState_Event& from);
  void MergeFrom(const CurrentDiamondState_Event& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 added = 2;
  inline bool has_added() const;
  inline void clear_added();
  static const int kAddedFieldNumber = 2;
  inline ::google::protobuf::int32 added() const;
  inline void set_added(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.CurrentDiamondState.Event)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_added();
  inline void clear_has_added();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 added_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_CurrentDiamondState_2eproto();
  friend void protobuf_AssignDesc_CurrentDiamondState_2eproto();
  friend void protobuf_ShutdownFile_CurrentDiamondState_2eproto();
  
  void InitAsDefaultInstance();
  static CurrentDiamondState_Event* default_instance_;
};
// -------------------------------------------------------------------

class CurrentDiamondState : public ::google::protobuf::Message {
 public:
  CurrentDiamondState();
  virtual ~CurrentDiamondState();
  
  CurrentDiamondState(const CurrentDiamondState& from);
  
  inline CurrentDiamondState& operator=(const CurrentDiamondState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CurrentDiamondState& default_instance();
  
  void Swap(CurrentDiamondState* other);
  
  // implements Message ----------------------------------------------
  
  CurrentDiamondState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CurrentDiamondState& from);
  void MergeFrom(const CurrentDiamondState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CurrentDiamondState_Event Event;
  
  typedef CurrentDiamondState_traits traits;
  static const traits value = CurrentDiamondState_traits_value;
  static inline bool traits_IsValid(int value) {
    return CurrentDiamondState_traits_IsValid(value);
  }
  static const traits traits_MIN =
    CurrentDiamondState_traits_traits_MIN;
  static const traits traits_MAX =
    CurrentDiamondState_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    CurrentDiamondState_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return CurrentDiamondState_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return CurrentDiamondState_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return CurrentDiamondState_traits_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required uint64 total = 1;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 1;
  inline ::google::protobuf::uint64 total() const;
  inline void set_total(::google::protobuf::uint64 value);
  
  // required uint64 delta = 2;
  inline bool has_delta() const;
  inline void clear_delta();
  static const int kDeltaFieldNumber = 2;
  inline ::google::protobuf::uint64 delta() const;
  inline void set_delta(::google::protobuf::uint64 value);
  
  // repeated .game_connection.CurrentDiamondState.Event new_event = 3;
  inline int new_event_size() const;
  inline void clear_new_event();
  static const int kNewEventFieldNumber = 3;
  inline const ::game_connection::CurrentDiamondState_Event& new_event(int index) const;
  inline ::game_connection::CurrentDiamondState_Event* mutable_new_event(int index);
  inline ::game_connection::CurrentDiamondState_Event* add_new_event();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::CurrentDiamondState_Event >&
      new_event() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::CurrentDiamondState_Event >*
      mutable_new_event();
  
  // @@protoc_insertion_point(class_scope:game_connection.CurrentDiamondState)
 private:
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_delta();
  inline void clear_has_delta();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 total_;
  ::google::protobuf::uint64 delta_;
  ::google::protobuf::RepeatedPtrField< ::game_connection::CurrentDiamondState_Event > new_event_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_CurrentDiamondState_2eproto();
  friend void protobuf_AssignDesc_CurrentDiamondState_2eproto();
  friend void protobuf_ShutdownFile_CurrentDiamondState_2eproto();
  
  void InitAsDefaultInstance();
  static CurrentDiamondState* default_instance_;
};
// ===================================================================


// ===================================================================

// CurrentDiamondState_Event

// required int32 id = 1;
inline bool CurrentDiamondState_Event::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurrentDiamondState_Event::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurrentDiamondState_Event::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurrentDiamondState_Event::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CurrentDiamondState_Event::id() const {
  return id_;
}
inline void CurrentDiamondState_Event::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 added = 2;
inline bool CurrentDiamondState_Event::has_added() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurrentDiamondState_Event::set_has_added() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CurrentDiamondState_Event::clear_has_added() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CurrentDiamondState_Event::clear_added() {
  added_ = 0;
  clear_has_added();
}
inline ::google::protobuf::int32 CurrentDiamondState_Event::added() const {
  return added_;
}
inline void CurrentDiamondState_Event::set_added(::google::protobuf::int32 value) {
  set_has_added();
  added_ = value;
}

// -------------------------------------------------------------------

// CurrentDiamondState

// required uint64 total = 1;
inline bool CurrentDiamondState::has_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CurrentDiamondState::set_has_total() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CurrentDiamondState::clear_has_total() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CurrentDiamondState::clear_total() {
  total_ = GOOGLE_ULONGLONG(0);
  clear_has_total();
}
inline ::google::protobuf::uint64 CurrentDiamondState::total() const {
  return total_;
}
inline void CurrentDiamondState::set_total(::google::protobuf::uint64 value) {
  set_has_total();
  total_ = value;
}

// required uint64 delta = 2;
inline bool CurrentDiamondState::has_delta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CurrentDiamondState::set_has_delta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CurrentDiamondState::clear_has_delta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CurrentDiamondState::clear_delta() {
  delta_ = GOOGLE_ULONGLONG(0);
  clear_has_delta();
}
inline ::google::protobuf::uint64 CurrentDiamondState::delta() const {
  return delta_;
}
inline void CurrentDiamondState::set_delta(::google::protobuf::uint64 value) {
  set_has_delta();
  delta_ = value;
}

// repeated .game_connection.CurrentDiamondState.Event new_event = 3;
inline int CurrentDiamondState::new_event_size() const {
  return new_event_.size();
}
inline void CurrentDiamondState::clear_new_event() {
  new_event_.Clear();
}
inline const ::game_connection::CurrentDiamondState_Event& CurrentDiamondState::new_event(int index) const {
  return new_event_.Get(index);
}
inline ::game_connection::CurrentDiamondState_Event* CurrentDiamondState::mutable_new_event(int index) {
  return new_event_.Mutable(index);
}
inline ::game_connection::CurrentDiamondState_Event* CurrentDiamondState::add_new_event() {
  return new_event_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::CurrentDiamondState_Event >&
CurrentDiamondState::new_event() const {
  return new_event_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::CurrentDiamondState_Event >*
CurrentDiamondState::mutable_new_event() {
  return &new_event_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::CurrentDiamondState_traits>() {
  return ::game_connection::CurrentDiamondState_traits_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CurrentDiamondState_2eproto__INCLUDED
