// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataQuery_Q_PlayerOnlineReward.proto

#ifndef PROTOBUF_DataQuery_5fQ_5fPlayerOnlineReward_2eproto__INCLUDED
#define PROTOBUF_DataQuery_5fQ_5fPlayerOnlineReward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();
void protobuf_AssignDesc_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();
void protobuf_ShutdownFile_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();

class DataQuery_Q_PlayerOnlineReward;
class DataQuery_Q_PlayerOnlineReward_Award;

enum DataQuery_Q_PlayerOnlineReward_traits {
  DataQuery_Q_PlayerOnlineReward_traits_value = 7432
};
bool DataQuery_Q_PlayerOnlineReward_traits_IsValid(int value);
const DataQuery_Q_PlayerOnlineReward_traits DataQuery_Q_PlayerOnlineReward_traits_traits_MIN = DataQuery_Q_PlayerOnlineReward_traits_value;
const DataQuery_Q_PlayerOnlineReward_traits DataQuery_Q_PlayerOnlineReward_traits_traits_MAX = DataQuery_Q_PlayerOnlineReward_traits_value;
const int DataQuery_Q_PlayerOnlineReward_traits_traits_ARRAYSIZE = DataQuery_Q_PlayerOnlineReward_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataQuery_Q_PlayerOnlineReward_traits_descriptor();
inline const ::std::string& DataQuery_Q_PlayerOnlineReward_traits_Name(DataQuery_Q_PlayerOnlineReward_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataQuery_Q_PlayerOnlineReward_traits_descriptor(), value);
}
inline bool DataQuery_Q_PlayerOnlineReward_traits_Parse(
    const ::std::string& name, DataQuery_Q_PlayerOnlineReward_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataQuery_Q_PlayerOnlineReward_traits>(
    DataQuery_Q_PlayerOnlineReward_traits_descriptor(), name, value);
}
enum DataQuery_Q_PlayerOnlineReward_AwardType {
  DataQuery_Q_PlayerOnlineReward_AwardType_PROP = 1,
  DataQuery_Q_PlayerOnlineReward_AwardType_MATERIAL = 3
};
bool DataQuery_Q_PlayerOnlineReward_AwardType_IsValid(int value);
const DataQuery_Q_PlayerOnlineReward_AwardType DataQuery_Q_PlayerOnlineReward_AwardType_AwardType_MIN = DataQuery_Q_PlayerOnlineReward_AwardType_PROP;
const DataQuery_Q_PlayerOnlineReward_AwardType DataQuery_Q_PlayerOnlineReward_AwardType_AwardType_MAX = DataQuery_Q_PlayerOnlineReward_AwardType_MATERIAL;
const int DataQuery_Q_PlayerOnlineReward_AwardType_AwardType_ARRAYSIZE = DataQuery_Q_PlayerOnlineReward_AwardType_AwardType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataQuery_Q_PlayerOnlineReward_AwardType_descriptor();
inline const ::std::string& DataQuery_Q_PlayerOnlineReward_AwardType_Name(DataQuery_Q_PlayerOnlineReward_AwardType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataQuery_Q_PlayerOnlineReward_AwardType_descriptor(), value);
}
inline bool DataQuery_Q_PlayerOnlineReward_AwardType_Parse(
    const ::std::string& name, DataQuery_Q_PlayerOnlineReward_AwardType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataQuery_Q_PlayerOnlineReward_AwardType>(
    DataQuery_Q_PlayerOnlineReward_AwardType_descriptor(), name, value);
}
// ===================================================================

class DataQuery_Q_PlayerOnlineReward_Award : public ::google::protobuf::Message {
 public:
  DataQuery_Q_PlayerOnlineReward_Award();
  virtual ~DataQuery_Q_PlayerOnlineReward_Award();
  
  DataQuery_Q_PlayerOnlineReward_Award(const DataQuery_Q_PlayerOnlineReward_Award& from);
  
  inline DataQuery_Q_PlayerOnlineReward_Award& operator=(const DataQuery_Q_PlayerOnlineReward_Award& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataQuery_Q_PlayerOnlineReward_Award& default_instance();
  
  void Swap(DataQuery_Q_PlayerOnlineReward_Award* other);
  
  // implements Message ----------------------------------------------
  
  DataQuery_Q_PlayerOnlineReward_Award* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataQuery_Q_PlayerOnlineReward_Award& from);
  void MergeFrom(const DataQuery_Q_PlayerOnlineReward_Award& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .game_connection.DataQuery_Q_PlayerOnlineReward.AwardType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::game_connection::DataQuery_Q_PlayerOnlineReward_AwardType type() const;
  inline void set_type(::game_connection::DataQuery_Q_PlayerOnlineReward_AwardType value);
  
  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.DataQuery_Q_PlayerOnlineReward.Award)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_number();
  inline void clear_has_number();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 number_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();
  friend void protobuf_AssignDesc_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();
  friend void protobuf_ShutdownFile_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();
  
  void InitAsDefaultInstance();
  static DataQuery_Q_PlayerOnlineReward_Award* default_instance_;
};
// -------------------------------------------------------------------

class DataQuery_Q_PlayerOnlineReward : public ::google::protobuf::Message {
 public:
  DataQuery_Q_PlayerOnlineReward();
  virtual ~DataQuery_Q_PlayerOnlineReward();
  
  DataQuery_Q_PlayerOnlineReward(const DataQuery_Q_PlayerOnlineReward& from);
  
  inline DataQuery_Q_PlayerOnlineReward& operator=(const DataQuery_Q_PlayerOnlineReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataQuery_Q_PlayerOnlineReward& default_instance();
  
  void Swap(DataQuery_Q_PlayerOnlineReward* other);
  
  // implements Message ----------------------------------------------
  
  DataQuery_Q_PlayerOnlineReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataQuery_Q_PlayerOnlineReward& from);
  void MergeFrom(const DataQuery_Q_PlayerOnlineReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef DataQuery_Q_PlayerOnlineReward_Award Award;
  
  typedef DataQuery_Q_PlayerOnlineReward_traits traits;
  static const traits value = DataQuery_Q_PlayerOnlineReward_traits_value;
  static inline bool traits_IsValid(int value) {
    return DataQuery_Q_PlayerOnlineReward_traits_IsValid(value);
  }
  static const traits traits_MIN =
    DataQuery_Q_PlayerOnlineReward_traits_traits_MIN;
  static const traits traits_MAX =
    DataQuery_Q_PlayerOnlineReward_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    DataQuery_Q_PlayerOnlineReward_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return DataQuery_Q_PlayerOnlineReward_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return DataQuery_Q_PlayerOnlineReward_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return DataQuery_Q_PlayerOnlineReward_traits_Parse(name, value);
  }
  
  typedef DataQuery_Q_PlayerOnlineReward_AwardType AwardType;
  static const AwardType PROP = DataQuery_Q_PlayerOnlineReward_AwardType_PROP;
  static const AwardType MATERIAL = DataQuery_Q_PlayerOnlineReward_AwardType_MATERIAL;
  static inline bool AwardType_IsValid(int value) {
    return DataQuery_Q_PlayerOnlineReward_AwardType_IsValid(value);
  }
  static const AwardType AwardType_MIN =
    DataQuery_Q_PlayerOnlineReward_AwardType_AwardType_MIN;
  static const AwardType AwardType_MAX =
    DataQuery_Q_PlayerOnlineReward_AwardType_AwardType_MAX;
  static const int AwardType_ARRAYSIZE =
    DataQuery_Q_PlayerOnlineReward_AwardType_AwardType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AwardType_descriptor() {
    return DataQuery_Q_PlayerOnlineReward_AwardType_descriptor();
  }
  static inline const ::std::string& AwardType_Name(AwardType value) {
    return DataQuery_Q_PlayerOnlineReward_AwardType_Name(value);
  }
  static inline bool AwardType_Parse(const ::std::string& name,
      AwardType* value) {
    return DataQuery_Q_PlayerOnlineReward_AwardType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .game_connection.DataQuery_Q_PlayerOnlineReward.Award award = 2;
  inline int award_size() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 2;
  inline const ::game_connection::DataQuery_Q_PlayerOnlineReward_Award& award(int index) const;
  inline ::game_connection::DataQuery_Q_PlayerOnlineReward_Award* mutable_award(int index);
  inline ::game_connection::DataQuery_Q_PlayerOnlineReward_Award* add_award();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_Q_PlayerOnlineReward_Award >&
      award() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_Q_PlayerOnlineReward_Award >*
      mutable_award();
  
  // required int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.DataQuery_Q_PlayerOnlineReward)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_Q_PlayerOnlineReward_Award > award_;
  ::google::protobuf::int32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();
  friend void protobuf_AssignDesc_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();
  friend void protobuf_ShutdownFile_DataQuery_5fQ_5fPlayerOnlineReward_2eproto();
  
  void InitAsDefaultInstance();
  static DataQuery_Q_PlayerOnlineReward* default_instance_;
};
// ===================================================================


// ===================================================================

// DataQuery_Q_PlayerOnlineReward_Award

// required .game_connection.DataQuery_Q_PlayerOnlineReward.AwardType type = 1;
inline bool DataQuery_Q_PlayerOnlineReward_Award::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::game_connection::DataQuery_Q_PlayerOnlineReward_AwardType DataQuery_Q_PlayerOnlineReward_Award::type() const {
  return static_cast< ::game_connection::DataQuery_Q_PlayerOnlineReward_AwardType >(type_);
}
inline void DataQuery_Q_PlayerOnlineReward_Award::set_type(::game_connection::DataQuery_Q_PlayerOnlineReward_AwardType value) {
  GOOGLE_DCHECK(::game_connection::DataQuery_Q_PlayerOnlineReward_AwardType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required int32 id = 2;
inline bool DataQuery_Q_PlayerOnlineReward_Award::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DataQuery_Q_PlayerOnlineReward_Award::id() const {
  return id_;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 number = 3;
inline bool DataQuery_Q_PlayerOnlineReward_Award::has_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::set_has_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::clear_has_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 DataQuery_Q_PlayerOnlineReward_Award::number() const {
  return number_;
}
inline void DataQuery_Q_PlayerOnlineReward_Award::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// DataQuery_Q_PlayerOnlineReward

// repeated .game_connection.DataQuery_Q_PlayerOnlineReward.Award award = 2;
inline int DataQuery_Q_PlayerOnlineReward::award_size() const {
  return award_.size();
}
inline void DataQuery_Q_PlayerOnlineReward::clear_award() {
  award_.Clear();
}
inline const ::game_connection::DataQuery_Q_PlayerOnlineReward_Award& DataQuery_Q_PlayerOnlineReward::award(int index) const {
  return award_.Get(index);
}
inline ::game_connection::DataQuery_Q_PlayerOnlineReward_Award* DataQuery_Q_PlayerOnlineReward::mutable_award(int index) {
  return award_.Mutable(index);
}
inline ::game_connection::DataQuery_Q_PlayerOnlineReward_Award* DataQuery_Q_PlayerOnlineReward::add_award() {
  return award_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_Q_PlayerOnlineReward_Award >&
DataQuery_Q_PlayerOnlineReward::award() const {
  return award_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::DataQuery_Q_PlayerOnlineReward_Award >*
DataQuery_Q_PlayerOnlineReward::mutable_award() {
  return &award_;
}

// required int32 key = 1;
inline bool DataQuery_Q_PlayerOnlineReward::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataQuery_Q_PlayerOnlineReward::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataQuery_Q_PlayerOnlineReward::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataQuery_Q_PlayerOnlineReward::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 DataQuery_Q_PlayerOnlineReward::key() const {
  return key_;
}
inline void DataQuery_Q_PlayerOnlineReward::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::DataQuery_Q_PlayerOnlineReward_traits>() {
  return ::game_connection::DataQuery_Q_PlayerOnlineReward_traits_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::DataQuery_Q_PlayerOnlineReward_AwardType>() {
  return ::game_connection::DataQuery_Q_PlayerOnlineReward_AwardType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DataQuery_5fQ_5fPlayerOnlineReward_2eproto__INCLUDED
