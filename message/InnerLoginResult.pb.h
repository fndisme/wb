// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InnerLoginResult.proto

#ifndef PROTOBUF_InnerLoginResult_2eproto__INCLUDED
#define PROTOBUF_InnerLoginResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_InnerLoginResult_2eproto();
void protobuf_AssignDesc_InnerLoginResult_2eproto();
void protobuf_ShutdownFile_InnerLoginResult_2eproto();

class InnerLoginResult;
class InnerLoginResult_InitProperty;

enum InnerLoginResult_traits {
  InnerLoginResult_traits_value = 8001
};
bool InnerLoginResult_traits_IsValid(int value);
const InnerLoginResult_traits InnerLoginResult_traits_traits_MIN = InnerLoginResult_traits_value;
const InnerLoginResult_traits InnerLoginResult_traits_traits_MAX = InnerLoginResult_traits_value;
const int InnerLoginResult_traits_traits_ARRAYSIZE = InnerLoginResult_traits_traits_MAX + 1;

const ::google::protobuf::EnumDescriptor* InnerLoginResult_traits_descriptor();
inline const ::std::string& InnerLoginResult_traits_Name(InnerLoginResult_traits value) {
  return ::google::protobuf::internal::NameOfEnum(
    InnerLoginResult_traits_descriptor(), value);
}
inline bool InnerLoginResult_traits_Parse(
    const ::std::string& name, InnerLoginResult_traits* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InnerLoginResult_traits>(
    InnerLoginResult_traits_descriptor(), name, value);
}
enum InnerLoginResult_FailedReason {
  InnerLoginResult_FailedReason_TOOLATE = 10,
  InnerLoginResult_FailedReason_KEYERROR = 11,
  InnerLoginResult_FailedReason_NOT_FROM_DISPATCHER = 12,
  InnerLoginResult_FailedReason_TOOFAST = 13,
  InnerLoginResult_FailedReason_NOT_NEED_FORCE = 14,
  InnerLoginResult_FailedReason_NOT_SUPPORT_LOGIN_FLAG = 15
};
bool InnerLoginResult_FailedReason_IsValid(int value);
const InnerLoginResult_FailedReason InnerLoginResult_FailedReason_FailedReason_MIN = InnerLoginResult_FailedReason_TOOLATE;
const InnerLoginResult_FailedReason InnerLoginResult_FailedReason_FailedReason_MAX = InnerLoginResult_FailedReason_NOT_SUPPORT_LOGIN_FLAG;
const int InnerLoginResult_FailedReason_FailedReason_ARRAYSIZE = InnerLoginResult_FailedReason_FailedReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* InnerLoginResult_FailedReason_descriptor();
inline const ::std::string& InnerLoginResult_FailedReason_Name(InnerLoginResult_FailedReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    InnerLoginResult_FailedReason_descriptor(), value);
}
inline bool InnerLoginResult_FailedReason_Parse(
    const ::std::string& name, InnerLoginResult_FailedReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InnerLoginResult_FailedReason>(
    InnerLoginResult_FailedReason_descriptor(), name, value);
}
// ===================================================================

class InnerLoginResult_InitProperty : public ::google::protobuf::Message {
 public:
  InnerLoginResult_InitProperty();
  virtual ~InnerLoginResult_InitProperty();
  
  InnerLoginResult_InitProperty(const InnerLoginResult_InitProperty& from);
  
  inline InnerLoginResult_InitProperty& operator=(const InnerLoginResult_InitProperty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InnerLoginResult_InitProperty& default_instance();
  
  void Swap(InnerLoginResult_InitProperty* other);
  
  // implements Message ----------------------------------------------
  
  InnerLoginResult_InitProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InnerLoginResult_InitProperty& from);
  void MergeFrom(const InnerLoginResult_InitProperty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required bytes infomation = 2;
  inline bool has_infomation() const;
  inline void clear_infomation();
  static const int kInfomationFieldNumber = 2;
  inline const ::std::string& infomation() const;
  inline void set_infomation(const ::std::string& value);
  inline void set_infomation(const char* value);
  inline void set_infomation(const void* value, size_t size);
  inline ::std::string* mutable_infomation();
  inline ::std::string* release_infomation();
  
  // @@protoc_insertion_point(class_scope:game_connection.InnerLoginResult.InitProperty)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_infomation();
  inline void clear_has_infomation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* infomation_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_InnerLoginResult_2eproto();
  friend void protobuf_AssignDesc_InnerLoginResult_2eproto();
  friend void protobuf_ShutdownFile_InnerLoginResult_2eproto();
  
  void InitAsDefaultInstance();
  static InnerLoginResult_InitProperty* default_instance_;
};
// -------------------------------------------------------------------

class InnerLoginResult : public ::google::protobuf::Message {
 public:
  InnerLoginResult();
  virtual ~InnerLoginResult();
  
  InnerLoginResult(const InnerLoginResult& from);
  
  inline InnerLoginResult& operator=(const InnerLoginResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InnerLoginResult& default_instance();
  
  void Swap(InnerLoginResult* other);
  
  // implements Message ----------------------------------------------
  
  InnerLoginResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InnerLoginResult& from);
  void MergeFrom(const InnerLoginResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef InnerLoginResult_InitProperty InitProperty;
  
  typedef InnerLoginResult_traits traits;
  static const traits value = InnerLoginResult_traits_value;
  static inline bool traits_IsValid(int value) {
    return InnerLoginResult_traits_IsValid(value);
  }
  static const traits traits_MIN =
    InnerLoginResult_traits_traits_MIN;
  static const traits traits_MAX =
    InnerLoginResult_traits_traits_MAX;
  static const int traits_ARRAYSIZE =
    InnerLoginResult_traits_traits_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  traits_descriptor() {
    return InnerLoginResult_traits_descriptor();
  }
  static inline const ::std::string& traits_Name(traits value) {
    return InnerLoginResult_traits_Name(value);
  }
  static inline bool traits_Parse(const ::std::string& name,
      traits* value) {
    return InnerLoginResult_traits_Parse(name, value);
  }
  
  typedef InnerLoginResult_FailedReason FailedReason;
  static const FailedReason TOOLATE = InnerLoginResult_FailedReason_TOOLATE;
  static const FailedReason KEYERROR = InnerLoginResult_FailedReason_KEYERROR;
  static const FailedReason NOT_FROM_DISPATCHER = InnerLoginResult_FailedReason_NOT_FROM_DISPATCHER;
  static const FailedReason TOOFAST = InnerLoginResult_FailedReason_TOOFAST;
  static const FailedReason NOT_NEED_FORCE = InnerLoginResult_FailedReason_NOT_NEED_FORCE;
  static const FailedReason NOT_SUPPORT_LOGIN_FLAG = InnerLoginResult_FailedReason_NOT_SUPPORT_LOGIN_FLAG;
  static inline bool FailedReason_IsValid(int value) {
    return InnerLoginResult_FailedReason_IsValid(value);
  }
  static const FailedReason FailedReason_MIN =
    InnerLoginResult_FailedReason_FailedReason_MIN;
  static const FailedReason FailedReason_MAX =
    InnerLoginResult_FailedReason_FailedReason_MAX;
  static const int FailedReason_ARRAYSIZE =
    InnerLoginResult_FailedReason_FailedReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FailedReason_descriptor() {
    return InnerLoginResult_FailedReason_descriptor();
  }
  static inline const ::std::string& FailedReason_Name(FailedReason value) {
    return InnerLoginResult_FailedReason_Name(value);
  }
  static inline bool FailedReason_Parse(const ::std::string& name,
      FailedReason* value) {
    return InnerLoginResult_FailedReason_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required bool successed = 1;
  inline bool has_successed() const;
  inline void clear_successed();
  static const int kSuccessedFieldNumber = 1;
  inline bool successed() const;
  inline void set_successed(bool value);
  
  // required string key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // optional .game_connection.InnerLoginResult.FailedReason failed_reason = 3;
  inline bool has_failed_reason() const;
  inline void clear_failed_reason();
  static const int kFailedReasonFieldNumber = 3;
  inline ::game_connection::InnerLoginResult_FailedReason failed_reason() const;
  inline void set_failed_reason(::game_connection::InnerLoginResult_FailedReason value);
  
  // repeated .game_connection.InnerLoginResult.InitProperty init_property = 4;
  inline int init_property_size() const;
  inline void clear_init_property();
  static const int kInitPropertyFieldNumber = 4;
  inline const ::game_connection::InnerLoginResult_InitProperty& init_property(int index) const;
  inline ::game_connection::InnerLoginResult_InitProperty* mutable_init_property(int index);
  inline ::game_connection::InnerLoginResult_InitProperty* add_init_property();
  inline const ::google::protobuf::RepeatedPtrField< ::game_connection::InnerLoginResult_InitProperty >&
      init_property() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_connection::InnerLoginResult_InitProperty >*
      mutable_init_property();
  
  // optional int32 ticket = 5;
  inline bool has_ticket() const;
  inline void clear_ticket();
  static const int kTicketFieldNumber = 5;
  inline ::google::protobuf::int32 ticket() const;
  inline void set_ticket(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:game_connection.InnerLoginResult)
 private:
  inline void set_has_successed();
  inline void clear_has_successed();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_failed_reason();
  inline void clear_has_failed_reason();
  inline void set_has_ticket();
  inline void clear_has_ticket();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* key_;
  bool successed_;
  int failed_reason_;
  ::google::protobuf::RepeatedPtrField< ::game_connection::InnerLoginResult_InitProperty > init_property_;
  ::google::protobuf::int32 ticket_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_InnerLoginResult_2eproto();
  friend void protobuf_AssignDesc_InnerLoginResult_2eproto();
  friend void protobuf_ShutdownFile_InnerLoginResult_2eproto();
  
  void InitAsDefaultInstance();
  static InnerLoginResult* default_instance_;
};
// ===================================================================


// ===================================================================

// InnerLoginResult_InitProperty

// required int32 type = 1;
inline bool InnerLoginResult_InitProperty::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InnerLoginResult_InitProperty::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InnerLoginResult_InitProperty::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InnerLoginResult_InitProperty::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 InnerLoginResult_InitProperty::type() const {
  return type_;
}
inline void InnerLoginResult_InitProperty::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required bytes infomation = 2;
inline bool InnerLoginResult_InitProperty::has_infomation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InnerLoginResult_InitProperty::set_has_infomation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InnerLoginResult_InitProperty::clear_has_infomation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InnerLoginResult_InitProperty::clear_infomation() {
  if (infomation_ != &::google::protobuf::internal::kEmptyString) {
    infomation_->clear();
  }
  clear_has_infomation();
}
inline const ::std::string& InnerLoginResult_InitProperty::infomation() const {
  return *infomation_;
}
inline void InnerLoginResult_InitProperty::set_infomation(const ::std::string& value) {
  set_has_infomation();
  if (infomation_ == &::google::protobuf::internal::kEmptyString) {
    infomation_ = new ::std::string;
  }
  infomation_->assign(value);
}
inline void InnerLoginResult_InitProperty::set_infomation(const char* value) {
  set_has_infomation();
  if (infomation_ == &::google::protobuf::internal::kEmptyString) {
    infomation_ = new ::std::string;
  }
  infomation_->assign(value);
}
inline void InnerLoginResult_InitProperty::set_infomation(const void* value, size_t size) {
  set_has_infomation();
  if (infomation_ == &::google::protobuf::internal::kEmptyString) {
    infomation_ = new ::std::string;
  }
  infomation_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InnerLoginResult_InitProperty::mutable_infomation() {
  set_has_infomation();
  if (infomation_ == &::google::protobuf::internal::kEmptyString) {
    infomation_ = new ::std::string;
  }
  return infomation_;
}
inline ::std::string* InnerLoginResult_InitProperty::release_infomation() {
  clear_has_infomation();
  if (infomation_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = infomation_;
    infomation_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// InnerLoginResult

// required bool successed = 1;
inline bool InnerLoginResult::has_successed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InnerLoginResult::set_has_successed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InnerLoginResult::clear_has_successed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InnerLoginResult::clear_successed() {
  successed_ = false;
  clear_has_successed();
}
inline bool InnerLoginResult::successed() const {
  return successed_;
}
inline void InnerLoginResult::set_successed(bool value) {
  set_has_successed();
  successed_ = value;
}

// required string key = 2;
inline bool InnerLoginResult::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InnerLoginResult::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InnerLoginResult::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InnerLoginResult::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& InnerLoginResult::key() const {
  return *key_;
}
inline void InnerLoginResult::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void InnerLoginResult::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void InnerLoginResult::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InnerLoginResult::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* InnerLoginResult::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .game_connection.InnerLoginResult.FailedReason failed_reason = 3;
inline bool InnerLoginResult::has_failed_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InnerLoginResult::set_has_failed_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InnerLoginResult::clear_has_failed_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InnerLoginResult::clear_failed_reason() {
  failed_reason_ = 10;
  clear_has_failed_reason();
}
inline ::game_connection::InnerLoginResult_FailedReason InnerLoginResult::failed_reason() const {
  return static_cast< ::game_connection::InnerLoginResult_FailedReason >(failed_reason_);
}
inline void InnerLoginResult::set_failed_reason(::game_connection::InnerLoginResult_FailedReason value) {
  GOOGLE_DCHECK(::game_connection::InnerLoginResult_FailedReason_IsValid(value));
  set_has_failed_reason();
  failed_reason_ = value;
}

// repeated .game_connection.InnerLoginResult.InitProperty init_property = 4;
inline int InnerLoginResult::init_property_size() const {
  return init_property_.size();
}
inline void InnerLoginResult::clear_init_property() {
  init_property_.Clear();
}
inline const ::game_connection::InnerLoginResult_InitProperty& InnerLoginResult::init_property(int index) const {
  return init_property_.Get(index);
}
inline ::game_connection::InnerLoginResult_InitProperty* InnerLoginResult::mutable_init_property(int index) {
  return init_property_.Mutable(index);
}
inline ::game_connection::InnerLoginResult_InitProperty* InnerLoginResult::add_init_property() {
  return init_property_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_connection::InnerLoginResult_InitProperty >&
InnerLoginResult::init_property() const {
  return init_property_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_connection::InnerLoginResult_InitProperty >*
InnerLoginResult::mutable_init_property() {
  return &init_property_;
}

// optional int32 ticket = 5;
inline bool InnerLoginResult::has_ticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InnerLoginResult::set_has_ticket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InnerLoginResult::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InnerLoginResult::clear_ticket() {
  ticket_ = 0;
  clear_has_ticket();
}
inline ::google::protobuf::int32 InnerLoginResult::ticket() const {
  return ticket_;
}
inline void InnerLoginResult::set_ticket(::google::protobuf::int32 value) {
  set_has_ticket();
  ticket_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::InnerLoginResult_traits>() {
  return ::game_connection::InnerLoginResult_traits_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_connection::InnerLoginResult_FailedReason>() {
  return ::game_connection::InnerLoginResult_FailedReason_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_InnerLoginResult_2eproto__INCLUDED
