// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InnerLoginResult.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "InnerLoginResult.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WebGame {
namespace Protocal {

namespace {

const ::google::protobuf::Descriptor* InnerLoginResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InnerLoginResult_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InnerLoginResult_traits_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* InnerLoginResult_FailedReason_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_InnerLoginResult_2eproto() {
  protobuf_AddDesc_InnerLoginResult_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "InnerLoginResult.proto");
  GOOGLE_CHECK(file != NULL);
  InnerLoginResult_descriptor_ = file->message_type(0);
  static const int InnerLoginResult_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLoginResult, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLoginResult, failed_reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLoginResult, session_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLoginResult, back_session_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLoginResult, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLoginResult, property_),
  };
  InnerLoginResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InnerLoginResult_descriptor_,
      InnerLoginResult::default_instance_,
      InnerLoginResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLoginResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InnerLoginResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InnerLoginResult));
  InnerLoginResult_traits_descriptor_ = InnerLoginResult_descriptor_->enum_type(0);
  InnerLoginResult_FailedReason_descriptor_ = InnerLoginResult_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_InnerLoginResult_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InnerLoginResult_descriptor_, &InnerLoginResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_InnerLoginResult_2eproto() {
  delete InnerLoginResult::default_instance_;
  delete InnerLoginResult_reflection_;
}

void protobuf_AddDesc_InnerLoginResult_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026InnerLoginResult.proto\022\020WebGame.Protoc"
    "al\"\300\001\n\020InnerLoginResult\022\016\n\006result\030\001 \002(\010\022"
    "\025\n\rfailed_reason\030\002 \001(\005\022\017\n\007session\030\003 \002(\003\022"
    "\024\n\014back_session\030\004 \001(\003\022\n\n\002id\030\005 \001(\005\022\020\n\010pro"
    "perty\030\006 \001(\005\"\024\n\006traits\022\n\n\005value\020\357\007\"*\n\014Fai"
    "ledReason\022\013\n\007RELOGIN\020\001\022\r\n\tKEY_ERROR\020\002", 237);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "InnerLoginResult.proto", &protobuf_RegisterTypes);
  InnerLoginResult::default_instance_ = new InnerLoginResult();
  InnerLoginResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_InnerLoginResult_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_InnerLoginResult_2eproto {
  StaticDescriptorInitializer_InnerLoginResult_2eproto() {
    protobuf_AddDesc_InnerLoginResult_2eproto();
  }
} static_descriptor_initializer_InnerLoginResult_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* InnerLoginResult_traits_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InnerLoginResult_traits_descriptor_;
}
bool InnerLoginResult_traits_IsValid(int value) {
  switch(value) {
    case 1007:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const InnerLoginResult_traits InnerLoginResult::value;
const InnerLoginResult_traits InnerLoginResult::traits_MIN;
const InnerLoginResult_traits InnerLoginResult::traits_MAX;
const int InnerLoginResult::traits_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* InnerLoginResult_FailedReason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InnerLoginResult_FailedReason_descriptor_;
}
bool InnerLoginResult_FailedReason_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const InnerLoginResult_FailedReason InnerLoginResult::RELOGIN;
const InnerLoginResult_FailedReason InnerLoginResult::KEY_ERROR;
const InnerLoginResult_FailedReason InnerLoginResult::FailedReason_MIN;
const InnerLoginResult_FailedReason InnerLoginResult::FailedReason_MAX;
const int InnerLoginResult::FailedReason_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int InnerLoginResult::kResultFieldNumber;
const int InnerLoginResult::kFailedReasonFieldNumber;
const int InnerLoginResult::kSessionFieldNumber;
const int InnerLoginResult::kBackSessionFieldNumber;
const int InnerLoginResult::kIdFieldNumber;
const int InnerLoginResult::kPropertyFieldNumber;
#endif  // !_MSC_VER

InnerLoginResult::InnerLoginResult()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InnerLoginResult::InitAsDefaultInstance() {
}

InnerLoginResult::InnerLoginResult(const InnerLoginResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InnerLoginResult::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  failed_reason_ = 0;
  session_ = GOOGLE_LONGLONG(0);
  back_session_ = GOOGLE_LONGLONG(0);
  id_ = 0;
  property_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InnerLoginResult::~InnerLoginResult() {
  SharedDtor();
}

void InnerLoginResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InnerLoginResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InnerLoginResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InnerLoginResult_descriptor_;
}

const InnerLoginResult& InnerLoginResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_InnerLoginResult_2eproto();
  return *default_instance_;
}

InnerLoginResult* InnerLoginResult::default_instance_ = NULL;

InnerLoginResult* InnerLoginResult::New() const {
  return new InnerLoginResult;
}

void InnerLoginResult::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = false;
    failed_reason_ = 0;
    session_ = GOOGLE_LONGLONG(0);
    back_session_ = GOOGLE_LONGLONG(0);
    id_ = 0;
    property_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InnerLoginResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_failed_reason;
        break;
      }

      // optional int32 failed_reason = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_failed_reason:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &failed_reason_)));
          set_has_failed_reason();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_session;
        break;
      }

      // required int64 session = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &session_)));
          set_has_session();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_back_session;
        break;
      }

      // optional int64 back_session = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_back_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &back_session_)));
          set_has_back_session();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_id;
        break;
      }

      // optional int32 id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_property;
        break;
      }

      // optional int32 property = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_property:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_)));
          set_has_property();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InnerLoginResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // optional int32 failed_reason = 2;
  if (has_failed_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->failed_reason(), output);
  }

  // required int64 session = 3;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->session(), output);
  }

  // optional int64 back_session = 4;
  if (has_back_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->back_session(), output);
  }

  // optional int32 id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->id(), output);
  }

  // optional int32 property = 6;
  if (has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->property(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InnerLoginResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // optional int32 failed_reason = 2;
  if (has_failed_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->failed_reason(), target);
  }

  // required int64 session = 3;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->session(), target);
  }

  // optional int64 back_session = 4;
  if (has_back_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->back_session(), target);
  }

  // optional int32 id = 5;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->id(), target);
  }

  // optional int32 property = 6;
  if (has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->property(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InnerLoginResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool result = 1;
    if (has_result()) {
      total_size += 1 + 1;
    }

    // optional int32 failed_reason = 2;
    if (has_failed_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->failed_reason());
    }

    // required int64 session = 3;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->session());
    }

    // optional int64 back_session = 4;
    if (has_back_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->back_session());
    }

    // optional int32 id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 property = 6;
    if (has_property()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->property());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InnerLoginResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InnerLoginResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InnerLoginResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InnerLoginResult::MergeFrom(const InnerLoginResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_failed_reason()) {
      set_failed_reason(from.failed_reason());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
    if (from.has_back_session()) {
      set_back_session(from.back_session());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_property()) {
      set_property(from.property());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InnerLoginResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InnerLoginResult::CopyFrom(const InnerLoginResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InnerLoginResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void InnerLoginResult::Swap(InnerLoginResult* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(failed_reason_, other->failed_reason_);
    std::swap(session_, other->session_);
    std::swap(back_session_, other->back_session_);
    std::swap(id_, other->id_);
    std::swap(property_, other->property_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InnerLoginResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InnerLoginResult_descriptor_;
  metadata.reflection = InnerLoginResult_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocal
}  // namespace WebGame

// @@protoc_insertion_point(global_scope)
